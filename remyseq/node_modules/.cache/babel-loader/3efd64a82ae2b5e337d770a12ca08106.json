{"ast":null,"code":"var _jsxFileName = \"/home/grace/test/my-app/src/form.js\";\nimport { Form, Row, Col, Input, Button, Icon } from 'antd';\nimport React from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nclass AdvancedSearchForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearch = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        const data = this.state.data;\n        console.log(values);\n        let arr1 = [];\n\n        for (let k in data) {\n          if (data[k].who == values.who) {\n            arr1.push({\n              createdAt: data[k].createdAt,\n              desc: data[k].desc,\n              key: data[k].key,\n              publishedAt: data[k].publishedAt,\n              source: data[k].source,\n              type: data[k].type,\n              url: data[k].url,\n              who: data[k].who\n            });\n          }\n        }\n\n        this.setState({\n          data: arr1\n        });\n      });\n    };\n\n    this.handleReset = () => {\n      this.props.form.resetFields();\n    };\n\n    this.toggle = () => {\n      const expand = this.state.expand;\n      this.setState({\n        expand: !expand\n      });\n    };\n\n    this.state = {\n      expand: false\n    };\n  } // To generate mock Form.Item\n\n\n  getFields() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const children = [];\n    children.push(React.createElement(Col, {\n      span: 8,\n      key: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, getFieldDecorator(\"who\", {\n      rules: [{\n        required: true,\n        message: 'Input something!'\n      }]\n    })(React.createElement(Input, {\n      placeholder: \"placeholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Description\",\n      key: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, getFieldDecorator(\"desc\", {\n      rules: [{\n        message: 'Input something!'\n      }]\n    })(React.createElement(Input, {\n      placeholder: \"placeholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })))));\n    return children;\n  }\n\n  render() {\n    const handleSearch = this.props.handleSearch;\n    const handleReset = this.props.handleReset;\n    return React.createElement(Form, {\n      className: \"ant-advanced-search-form\",\n      onSubmit: handleSearch,\n      style: {\n        margin: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Row, {\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.getFields()), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 24,\n      style: {\n        textAlign: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Search\"), React.createElement(Button, {\n      style: {\n        marginLeft: 8\n      },\n      onClick: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Clear\"), React.createElement(\"a\", {\n      style: {\n        marginLeft: 8,\n        fontSize: 12\n      },\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Collapse \", React.createElement(Icon, {\n      type: this.state.expand ? 'up' : 'down',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst WrappedAdvancedSearchForm = Form.create({\n  name: 'advanced_search'\n})(AdvancedSearchForm);\n\nclass Myform extends React.Component {\n  render() {\n    const data = this.props.data;\n    const handleSearch = this.props.handleSearch;\n    const handleReset = this.props.handleReset;\n    const getFileds = this.props.getFileds;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(WrappedAdvancedSearchForm, {\n      data: data,\n      handleSearch: handleSearch,\n      handleReset: handleReset,\n      getFileds: getFileds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Myform;","map":{"version":3,"sources":["/home/grace/test/my-app/src/form.js"],"names":["Form","Row","Col","Input","Button","Icon","React","AdvancedSearchForm","Component","constructor","props","handleSearch","e","preventDefault","form","validateFields","err","values","data","state","console","log","arr1","k","who","push","createdAt","desc","key","publishedAt","source","type","url","setState","handleReset","resetFields","toggle","expand","getFields","getFieldDecorator","children","rules","required","message","render","margin","textAlign","marginLeft","fontSize","WrappedAdvancedSearchForm","create","name","Myform","getFileds"],"mappings":"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","sourcesContent":["import { Form, Row, Col, Input, Button, Icon } from 'antd';\nimport React from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\n\n\nclass AdvancedSearchForm extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            expand: false,\n          };\n    }\n\n    // To generate mock Form.Item\n    getFields() {\n      const { getFieldDecorator } = this.props.form;\n      const children = [];\n        children.push(\n          <Col span={8} key={1} >\n            <Form.Item label={\"Name\"}>\n              {getFieldDecorator(\"who\", {\n                rules: [\n                  {\n                    required: true,\n                    message: 'Input something!',\n                  },\n                ],\n              })(<Input placeholder=\"placeholder\" />)}\n            </Form.Item>\n            <Form.Item label={\"Description\"} key={2} >\n              {getFieldDecorator(\"desc\", {\n                rules: [\n                  {\n                    message: 'Input something!',\n                  },\n                ],\n              })(<Input placeholder=\"placeholder\" />)}\n            </Form.Item>\n          </Col>,\n        );\n      return children;\n    }\n    handleSearch = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        const {data}= this.state\n        console.log(values)\n        let arr1 = []\n        for (let k in data){\n          if (data[k].who == values.who){\n            arr1.push({\n              createdAt: data[k].createdAt,\n              desc: data[k].desc,\n              key: data[k].key,\n              publishedAt: data[k].publishedAt,\n              source: data[k].source,\n              type: data[k].type,\n              url: data[k].url,\n              who: data[k].who,\n            })\n          }\n        }\n        this.setState({data:arr1})\n      });\n     };\n  \n    handleReset = () => {\n      \n      this.props.form.resetFields();\n    };\n  \n    toggle = () => {\n      const { expand } = this.state;\n      this.setState({ expand: !expand });\n    };\n  \n\n\n    render() {\n      const {handleSearch} = this.props;\n      const {handleReset} = this.props;\n      return (\n        <Form className=\"ant-advanced-search-form\" onSubmit={handleSearch} style={{margin:20}}>\n          <Row gutter={24}>{this.getFields()}</Row>\n          <Row>\n            <Col span={24} style={{ textAlign: 'right' }}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Search\n              </Button>\n              <Button style={{ marginLeft: 8 }} onClick={this.handleReset}>\n                Clear\n              </Button>\n              <a style={{ marginLeft: 8, fontSize: 12 }} onClick={this.toggle}>\n                Collapse <Icon type={this.state.expand ? 'up' : 'down'} />\n              </a>\n            </Col>\n          </Row>\n        </Form>\n      );\n    }\n  }\n\nconst WrappedAdvancedSearchForm = Form.create({ name: 'advanced_search' })(AdvancedSearchForm);\n\nclass Myform extends React.Component {\n\n    render(){\n        const {data}= this.props\n        const {handleSearch} = this.props;\n        const {handleReset} = this.props;\n        const {getFileds} = this.props;\n        return(\n         <div>\n            <WrappedAdvancedSearchForm data= {data} handleSearch = {handleSearch} handleReset = {handleReset} getFileds = {getFileds} />\n          </div>\n        )\n    \n    }\n \n}\n\nexport default Myform"]},"metadata":{},"sourceType":"module"}