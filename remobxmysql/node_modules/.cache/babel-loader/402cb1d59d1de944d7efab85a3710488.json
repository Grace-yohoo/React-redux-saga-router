{"ast":null,"code":"import _defineProperty from \"/home/grace/test/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/home/grace/test/my-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/grace/test/my-app/src/components/Form/editablecell.js\",\n    _dec,\n    _class;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Button, Table, Input, InputNumber, Popconfirm, Form, Spin } from 'antd';\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport SearchSet from '../Search/Search';\nimport CollectionCreateForm from '../AddColumns/addcol';\nimport { observer, inject } from 'mobx-react';\nconst EditableContext = React.createContext();\n\nclass EditableCell extends React.Component {\n  constructor(...args) {\n    var _temp;\n\n    return _temp = super(...args), this.getInput = () => {\n      if (this.props.inputType === 'number') {\n        return React.createElement(InputNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      });\n    }, this.renderCell = ({\n      getFieldDecorator\n    }) => {\n      const _this$props = this.props,\n            editing = _this$props.editing,\n            dataIndex = _this$props.dataIndex,\n            title = _this$props.title,\n            inputType = _this$props.inputType,\n            record = _this$props.record,\n            index = _this$props.index,\n            children = _this$props.children,\n            restProps = _objectWithoutProperties(_this$props, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n      return React.createElement(\"td\", Object.assign({}, restProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), editing ? React.createElement(Form.Item, {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, getFieldDecorator(dataIndex, {\n        rules: [{\n          required: true,\n          message: \"Please Input \".concat(title, \"!\")\n        }],\n        initialValue: record[dataIndex]\n      })(this.getInput())) : children);\n    }, _temp;\n  }\n\n  render() {\n    return React.createElement(EditableContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.renderCell);\n  }\n\n} //可编辑表格 父组件\n\n\nlet EditableTable = (_dec = inject('store'), _dec(_class = observer(_class = class EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchedColumn: ''\n    };\n    const handleDelete = this.props.store.home.handleDelete;\n    const _this$props$store$hom = this.props.store.home,\n          editingKey = _this$props$store$hom.editingKey,\n          isEditing = _this$props$store$hom.isEditing,\n          save = _this$props$store$hom.save,\n          cancel = _this$props$store$hom.cancel,\n          edit = _this$props$store$hom.edit;\n    this.columns = [{\n      title: 'Name',\n      dataIndex: 'who',\n      editable: true\n    }, {\n      title: 'Description',\n      dataIndex: 'desc',\n      width: '30%',\n      editable: true,\n      ellipsis: true\n    }, {\n      title: 'Type',\n      dataIndex: 'type'\n    }, {\n      title: 'Link',\n      dataIndex: 'url',\n      editable: true,\n      render: text => React.createElement(\"a\", {\n        href: text,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"\\u94FE\\u63A5\")\n    }, {\n      title: 'CreatedAt',\n      dataIndex: 'createdAt',\n      width: '15%'\n    }, {\n      title: 'Source',\n      dataIndex: 'source',\n      editable: true\n    }, {\n      title: 'Delete',\n      dataIndex: 'Delete',\n      render: (text, record) => this.props.store.home.data.length >= 1 ? React.createElement(Popconfirm, {\n        title: \"Sure to delete?\",\n        onConfirm: () => handleDelete(record.key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Delete\")) : null\n    }, {\n      title: 'Operation',\n      dataIndex: 'operation',\n      render: (text, record) => {\n        const editable = isEditing(record);\n        return editable ? React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(EditableContext.Consumer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, form => React.createElement(\"a\", {\n          onClick: () => save(form, record.key),\n          style: {\n            marginRight: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"Save\")), React.createElement(Popconfirm, {\n          title: \"Sure to cancel?\",\n          onConfirm: () => cancel(record.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, \"Cancel\"))) : React.createElement(\"a\", {\n          disabled: editingKey !== '',\n          onClick: () => edit(record.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, \"Edit\");\n      }\n    }];\n  }\n\n  componentDidMount() {\n    const store = this.props.store;\n    const changeData = store.home.changeData;\n    fetch('http://gank.io/api/today').then(result => result.json()).then(result => changeData(result, this)).catch(e => this.setState({\n      error: e\n    }));\n  }\n\n  render() {\n    const store = this.props.store;\n    const _store$home = store.home,\n          data = _store$home.data,\n          isEditing = _store$home.isEditing,\n          cancel = _store$home.cancel,\n          saveFormRef = _store$home.saveFormRef,\n          visible = _store$home.visible,\n          showModal = _store$home.showModal,\n          handleCancel = _store$home.handleCancel,\n          handleCreate = _store$home.handleCreate,\n          handleSearch = _store$home.handleSearch,\n          handleReset = _store$home.handleReset;\n    const components = {\n      body: {\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return _objectSpread({}, col, {\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === 'age' ? 'number' : 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: isEditing(record)\n        })\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, data ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(SearchSet, {\n      handleSearch: handleSearch,\n      handleReset: handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      onClick: showModal,\n      style: {\n        margin: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Add a row\"), React.createElement(CollectionCreateForm, {\n      wrappedComponentRef: saveFormRef,\n      visible: visible,\n      onCancel: handleCancel,\n      onCreate: handleCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(EditableContext.Provider, {\n      value: this.props.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Table, {\n      style: {\n        margin: 20\n      },\n      components: components,\n      bordered: true,\n      dataSource: data,\n      columns: columns,\n      rowClassName: \"editable-row\",\n      pagination: {\n        onChange: cancel\n      },\n      rowKey: data => data.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }))) : React.createElement(Spin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }));\n  }\n\n}) || _class) || _class);\nconst EditableFormTable = Form.create()(EditableTable); //导出的组件\n\nclass Editable extends React.Component {\n  render() {\n    return React.createElement(EditableFormTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Editable;","map":{"version":3,"sources":["/home/grace/test/my-app/src/components/Form/editablecell.js"],"names":["Button","Table","Input","InputNumber","Popconfirm","Form","Spin","React","SearchSet","CollectionCreateForm","observer","inject","EditableContext","createContext","EditableCell","Component","getInput","props","inputType","renderCell","getFieldDecorator","editing","dataIndex","title","record","index","children","restProps","margin","rules","required","message","initialValue","render","EditableTable","constructor","state","searchedColumn","handleDelete","store","home","editingKey","isEditing","save","cancel","edit","columns","editable","width","ellipsis","text","data","length","key","form","marginRight","componentDidMount","changeData","fetch","then","result","json","catch","e","setState","error","saveFormRef","visible","showModal","handleCancel","handleCreate","handleSearch","handleReset","components","body","cell","map","col","onCell","onChange","EditableFormTable","create","Editable"],"mappings":"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","sourcesContent":["import { Button, Table, Input, InputNumber, Popconfirm, Form, Spin} from 'antd';\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport SearchSet from '../Search/Search'\nimport CollectionCreateForm from '../AddColumns/addcol'\nimport {observer, inject} from 'mobx-react'\n\n\nconst EditableContext = React.createContext();\n\nclass EditableCell extends React.Component {\n  getInput = () => {\n    if (this.props.inputType === 'number') {\n      return <InputNumber />;\n    }\n    return <Input />;\n  };\n\n  renderCell = ({ getFieldDecorator }) => {\n    const {\n      editing,\n      dataIndex,\n      title,    \n      inputType,\n      record,\n      index,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editing ? (\n          <Form.Item style={{ margin: 0 }}>\n            {getFieldDecorator(dataIndex, {\n              rules: [\n                {\n                  required: true,\n                  message: `Please Input ${title}!`,\n                },\n              ],\n              initialValue: record[dataIndex],\n            })(this.getInput())}\n          </Form.Item>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  };\n\n  render() {\n    return <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>;\n  }\n}\n\n//可编辑表格 父组件\n@inject('store')\n@observer\nclass EditableTable extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      searchedColumn: '', \n    };\n    const {home:{handleDelete}}= this.props.store;\n    const {home:{editingKey,isEditing,save,cancel,edit}} = this.props.store;\n    this.columns = [\n      {\n        title: 'Name',\n        dataIndex: 'who',\n        editable: true,\n      },\n      {\n        title:'Description',\n        dataIndex:'desc',\n        width:'30%',\n        editable: true,\n        ellipsis: true,\n      },\n      {\n        title: 'Type',\n        dataIndex: 'type',\n      },\n      {\n        title:'Link',\n        dataIndex:'url',\n        editable: true,\n        render: text => <a href={text} target=\"_blank\">链接</a>,\n      },\n      {\n        title: 'CreatedAt',\n        dataIndex: 'createdAt',\n        width:'15%',\n      },\n      {\n        title: 'Source',\n        dataIndex: 'source',\n        editable: true,\n      },\n      {\n        title: 'Delete',\n        dataIndex: 'Delete',\n        render: (text, record) =>\n          this.props.store.home.data.length >= 1 ? (\n            <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record.key)}>\n              <a>Delete</a>\n            </Popconfirm>\n          ) : null,\n      },  \n\n      {\n        title: 'Operation',\n        dataIndex: 'operation',\n        render: (text, record) => {\n\n\n\n          const editable = isEditing(record);\n          return editable ? (\n            <span>\n              <EditableContext.Consumer>\n                {form => (\n                  <a\n                    onClick={() =>save(form, record.key)}\n                    style={{ marginRight: 8 }}\n                  >\n                    Save\n                  </a>\n                )}\n              </EditableContext.Consumer>\n              <Popconfirm title=\"Sure to cancel?\" onConfirm={() => cancel(record.key)}>\n                <a>Cancel</a>\n              </Popconfirm>\n            </span>\n          ) : (\n            <a disabled={editingKey !== ''} onClick={() => edit(record.key)}>\n              Edit\n            </a>\n          );\n        },\n      },\n    ];\n\n  }\n\n\n\n  componentDidMount(){\n  const {store} = this.props;\n  const {home:{changeData}} = store;\n  fetch('http://gank.io/api/today')\n    .then(result => result.json())\n    .then(result => changeData(result,this))\n    .catch(e => this.setState({ error: e }))\n  }\n  \n\n\n  render() {\n    const {store} = this.props;\n    const {home:{\n        data,\n        isEditing,\n        cancel,\n        saveFormRef,\n        visible,\n        showModal,\n        handleCancel,\n        handleCreate,\n        handleSearch,\n        handleReset\n    }} = store;\n    const components = {\n      body: {\n        cell: EditableCell,\n      },\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === 'age' ? 'number' : 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: isEditing(record),\n        }),\n      };\n    });\n    return (\n        <div>\n          {data\n           ?<div>\n            <SearchSet handleSearch= {handleSearch} handleReset = {handleReset}/> \n            <Button  type=\"primary\" onClick={showModal} style={{margin:20}}>\n              Add a row\n            </Button>\n            <CollectionCreateForm\n                wrappedComponentRef={saveFormRef}\n                visible={visible}\n                onCancel={handleCancel}\n                onCreate={handleCreate}\n            />\n            <EditableContext.Provider value={this.props.form}>\n                <Table\n                style={{margin:20 }}\n                components={components}\n                bordered\n                dataSource={data}\n                columns={columns}\n                rowClassName=\"editable-row\"\n                pagination={{\n                onChange:cancel,\n                }}\n                rowKey= {data => data.key}\n                />\n            </EditableContext.Provider>\n      </div>\n      :<Spin />}\n    </div>\n    );\n  }\n}\n\nconst EditableFormTable = Form.create()(EditableTable);\n\n//导出的组件\nclass Editable extends React.Component {\n    render(){\n        return <EditableFormTable />\n    }\n\n}\n\nexport default Editable"]},"metadata":{},"sourceType":"module"}