{"ast":null,"code":"import { put, takeEvery } from 'redux-saga/effects';\nimport { fetcha, fetchb } from '../Request/request'; //put 与actiontype相同\n//Mysql 请求数据 (初始渲染  重置)\n\nfunction* fetchUser() {\n  const response = yield fetchb('http://localhost:8080/');\n\n  for (let k in response) {\n    response[k].key = response[k].id;\n  }\n\n  yield put({\n    type: \"fetch\",\n    payload: response\n  });\n} //MYSQL 删除\n\n\nfunction* mysqlDelFectch(key) {\n  const id = yield key.key;\n  console.log(id);\n  yield fetcha('http://localhost:8080/delete', id); //重新请求数据\n\n  const response = yield fetchb('http://localhost:8080/');\n\n  for (let k in response) {\n    response[k].key = response[k].id;\n  }\n\n  yield put({\n    type: \"delete\",\n    payload: response\n  });\n} //MYSQL 添加\n\n\nfunction* mysqlAddFectch(val) {\n  const data1 = yield val.data;\n  yield fetcha('http://localhost:8080/add', data1); //重新请求数据\n\n  const response = yield fetchb('http://localhost:8080/');\n\n  for (let k in response) {\n    response[k].key = response[k].id;\n  }\n\n  yield put({\n    type: 'create',\n    payload: response\n  });\n} //MYSQL 搜索\n\n\nfunction* mysqlSearchFectch(data) {\n  const name = yield data.value; // yield console.log(111)\n\n  const res = yield fetch('http://localhost:8080/search', {\n    method: 'POST',\n    // or 'PUT'\n    body: JSON.stringify(name),\n    // data can be `string` or {object}!\n    headers: new Headers({\n      'Content-Type': 'application/x-www-form-urlencoded'\n    })\n  });\n  const response = yield res.json();\n\n  for (let k in response) {\n    response[k].key = response[k].id;\n  }\n\n  yield put({\n    type: 'create',\n    payload: response\n  });\n} //MYSQL 修改\n\n\nfunction* mysqlSaveFectch(val) {\n  const data1 = yield val.row;\n  yield console.log(data1);\n  yield fetcha('http://localhost:8080/change', data1); //重新请求数据\n\n  const response = yield fetchb('http://localhost:8080/');\n\n  for (let k in response) {\n    response[k].key = response[k].id;\n  }\n\n  yield put({\n    type: 'save',\n    payload: response\n  });\n} //监听与组件type相同\n\n\nfunction* mySaga() {\n  yield takeEvery(\"feh\", fetchUser);\n  yield takeEvery('del', mysqlDelFectch);\n  yield takeEvery('add', mysqlAddFectch);\n  yield takeEvery('sear', mysqlSearchFectch);\n  yield takeEvery('sav', mysqlSaveFectch);\n}\n\nexport default mySaga;","map":{"version":3,"sources":["/home/grace/test/redux+saga+reactdom/src/saga/index.js"],"names":["put","takeEvery","fetcha","fetchb","fetchUser","response","k","key","id","type","payload","mysqlDelFectch","console","log","mysqlAddFectch","val","data1","data","mysqlSearchFectch","name","value","res","fetch","method","body","JSON","stringify","headers","Headers","json","mysqlSaveFectch","row","mySaga"],"mappings":"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","sourcesContent":["\nimport { put, takeEvery } from 'redux-saga/effects';\nimport { fetcha, fetchb} from '../Request/request'\n\n\n\n\n\n//put 与actiontype相同\n//Mysql 请求数据 (初始渲染  重置)\nfunction* fetchUser() {\n       const response = yield fetchb('http://localhost:8080/')\n\n       for (let k in response){\n        response[k].key = response[k].id\n       }\n      \n       yield put({type: \"fetch\", payload:response});\n    \n}\n\n\n//MYSQL 删除\nfunction* mysqlDelFectch(key){\n  const id = yield key.key\n  console.log(id)\n  yield fetcha('http://localhost:8080/delete',id)\n\n  //重新请求数据\n  const response = yield fetchb('http://localhost:8080/')\n\n  for (let k in response){\n    response[k].key = response[k].id\n   }\n\n  yield put({type: \"delete\", payload:response});\n}\n\n//MYSQL 添加\nfunction* mysqlAddFectch(val){\n      const data1 = yield val.data\n      \n      yield fetcha('http://localhost:8080/add',data1)\n\n      //重新请求数据\n      const response = yield fetchb('http://localhost:8080/')\n\n      for (let k in response){\n        response[k].key = response[k].id\n       }\n\n      yield put ({type:'create' ,payload:response})\n\n}\n\n//MYSQL 搜索\nfunction* mysqlSearchFectch(data){\n      const name = yield data.value\n\n      // yield console.log(111)\n\n      const res = yield fetch('http://localhost:8080/search', {\n            method: 'POST', // or 'PUT'\n            body: JSON.stringify(name), // data can be `string` or {object}!\n            headers: new Headers({\n              'Content-Type': 'application/x-www-form-urlencoded'\n            })\n          })\n\n      const response = yield res.json()\n\n      for (let k in response){\n        response[k].key = response[k].id\n       }\n\n      yield put ({type:'create' ,payload:response})\n\n}\n\n//MYSQL 修改\nfunction* mysqlSaveFectch(val){\n  const data1 = yield val.row\n  yield console.log(data1)\n  yield fetcha('http://localhost:8080/change',data1)\n  \n  //重新请求数据\n  const response = yield fetchb('http://localhost:8080/')\n\n  for (let k in response){\n    response[k].key = response[k].id\n   }\n\n  yield put({type:'save',payload:response})\n\n}\n\n\n//监听与组件type相同\n function* mySaga() {\n   yield takeEvery(\"feh\", fetchUser);\n   yield takeEvery('del', mysqlDelFectch)\n   yield takeEvery('add', mysqlAddFectch)\n   yield takeEvery('sear', mysqlSearchFectch)\n   yield takeEvery('sav', mysqlSaveFectch)\n\n }\n\n \n export default mySaga;\n\n"]},"metadata":{},"sourceType":"module"}