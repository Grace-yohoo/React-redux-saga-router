{"ast":null,"code":"import _defineProperty from \"/home/grace/test/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/home/grace/test/my-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/grace/test/my-app/src/editablecell.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Button, Modal, Radio, Table, Input, InputNumber, Popconfirm, Form, Spin, Icon } from 'antd';\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport Highlighter from 'react-highlight-words';\nlet data = null;\nconst CollectionCreateForm = Form.create({\n  name: 'form_in_modal'\n})( // eslint-disable-next-line\nclass extends React.Component {\n  render() {\n    const _this$props = this.props,\n          visible = _this$props.visible,\n          onCancel = _this$props.onCancel,\n          onCreate = _this$props.onCreate,\n          form = _this$props.form;\n    const getFieldDecorator = form.getFieldDecorator;\n    return React.createElement(Modal, {\n      visible: visible,\n      title: \"Create a new collection\",\n      okText: \"Create\",\n      onCancel: onCancel,\n      onOk: onCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(Form, {\n      layout: \"vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"who\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, getFieldDecorator('who', {\n      rules: [{\n        required: true,\n        message: 'Please input the name of collection!'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, getFieldDecorator('desc')(React.createElement(Input, {\n      type: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, getFieldDecorator('type', {\n      initialValue: 'Android'\n    })(React.createElement(Input, {\n      type: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"url\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, getFieldDecorator('url', {\n      initialValue: 'www.baidu.com'\n    })(React.createElement(Input, {\n      type: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"createdAt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, getFieldDecorator('createdAt', {\n      initialValue: 'null'\n    })(React.createElement(Input, {\n      type: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Source\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, getFieldDecorator('Source', {\n      initialValue: 'Chrome'\n    })(React.createElement(Input, {\n      type: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Source\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, getFieldDecorator('Source', {\n      initialValue: 'Chrome'\n    })(React.createElement(Input, {\n      type: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })))));\n  }\n\n});\nconst EditableContext = React.createContext();\n\nclass EditableCell extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getInput = () => {\n      if (this.props.inputType === 'number') {\n        return React.createElement(InputNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      });\n    };\n\n    this.renderCell = ({\n      getFieldDecorator\n    }) => {\n      const _this$props2 = this.props,\n            editing = _this$props2.editing,\n            dataIndex = _this$props2.dataIndex,\n            title = _this$props2.title,\n            inputType = _this$props2.inputType,\n            record = _this$props2.record,\n            index = _this$props2.index,\n            children = _this$props2.children,\n            restProps = _objectWithoutProperties(_this$props2, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n      return React.createElement(\"td\", Object.assign({}, restProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), editing ? React.createElement(Form.Item, {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, getFieldDecorator(dataIndex, {\n        rules: [{\n          required: true,\n          message: \"Please Input \".concat(title, \"!\")\n        }],\n        initialValue: record[dataIndex]\n      })(this.getInput())) : children);\n    };\n  }\n\n  render() {\n    return React.createElement(EditableContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.renderCell);\n  }\n\n}\n\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => React.createElement(\"div\", {\n        style: {\n          padding: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Input, {\n        ref: node => {\n          this.searchInput = node;\n        },\n        placeholder: \"Search \".concat(dataIndex),\n        value: selectedKeys[0],\n        onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n        onPressEnter: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n        style: {\n          width: 188,\n          marginBottom: 8,\n          display: 'block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        onClick: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n        icon: \"search\",\n        size: \"small\",\n        style: {\n          width: 90,\n          marginRight: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Search\"), React.createElement(Button, {\n        onClick: () => this.handleReset(clearFilters),\n        size: \"small\",\n        style: {\n          width: 90\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Reset\")),\n      filterIcon: filtered => React.createElement(Icon, {\n        type: \"search\",\n        style: {\n          color: filtered ? '#1890ff' : undefined\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }),\n      onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select());\n        }\n      },\n      render: text => this.state.searchedColumn === dataIndex ? React.createElement(Highlighter, {\n        highlightStyle: {\n          backgroundColor: '#ffc069',\n          padding: 0\n        },\n        searchWords: [this.state.searchText],\n        autoEscape: true,\n        textToHighlight: text.toString(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }) : text\n    });\n\n    this.handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleCreate = () => {\n      const form = this.formRef.props.form;\n      form.validateFields((err, values) => {\n        if (err) {\n          return;\n        }\n\n        Newdatas = Newdatas.push(values);\n        this.setState({\n          data: Newdatas\n        });\n        this.setState({\n          visible: false\n        });\n      });\n    };\n\n    this.handleDelete = key => {\n      const data = [...this.state.data];\n      this.setState({\n        data: data.filter(item => item.key !== key)\n      });\n    };\n\n    this.saveFormRef = formRef => {\n      this.formRef = formRef;\n    };\n\n    this.isEditing = record => record.key === this.state.editingKey;\n\n    this.cancel = () => {\n      this.setState({\n        editingKey: ''\n      });\n    };\n\n    this.state = {\n      data,\n      editingKey: '',\n      visible: false,\n      searchText: '',\n      searchedColumn: ''\n    };\n    this.columns = [_objectSpread({\n      title: 'who',\n      dataIndex: 'who',\n      editable: true\n    }, this.getColumnSearchProps('who')), {\n      title: 'desc',\n      dataIndex: 'desc',\n      width: '30%',\n      editable: true,\n      ellipsis: true\n    }, {\n      title: 'type',\n      dataIndex: 'type'\n    }, {\n      title: 'url',\n      dataIndex: 'url',\n      editable: true,\n      render: text => React.createElement(\"a\", {\n        href: text,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"\\u94FE\\u63A5\")\n    }, {\n      title: 'createdAt',\n      dataIndex: 'createdAt',\n      width: '15%'\n    }, {\n      title: 'source',\n      dataIndex: 'source',\n      editable: true\n    }, {\n      title: 'Delete',\n      dataIndex: 'Delete',\n      render: (text, record) => this.state.data.length >= 1 ? React.createElement(Popconfirm, {\n        title: \"Sure to delete?\",\n        onConfirm: () => this.handleDelete(record.key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Delete\")) : null\n    }, {\n      title: 'operation',\n      dataIndex: 'operation',\n      render: (text, record) => {\n        const editingKey = this.state.editingKey;\n        const data = this.state.data;\n        const editable = this.isEditing(record);\n        return editable ? React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, React.createElement(EditableContext.Consumer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, form => React.createElement(\"a\", {\n          onClick: () => this.save(form, record.key),\n          style: {\n            marginRight: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, \"Save\")), React.createElement(Popconfirm, {\n          title: \"Sure to cancel?\",\n          onConfirm: () => this.cancel(record.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, \"Cancel\"))) : React.createElement(\"a\", {\n          disabled: editingKey !== '',\n          onClick: () => this.edit(record.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, \"Edit\");\n      }\n    }];\n  }\n\n  changeData(result) {\n    let arr = [];\n    let data2 = [];\n    const data1 = result.results;\n\n    for (let k in data1) {\n      arr.push(data1[k]);\n    }\n\n    let arr2 = [].concat.apply([], arr);\n    console.log(arr2);\n\n    for (let i = 0; i < arr2.length; i++) {\n      data2.push({\n        publishedAt: arr2[i].publishedAt,\n        type: arr2[i].type,\n        url: arr2[i].url,\n        who: arr2[i].who,\n        key: arr2[i]._id,\n        createdAt: arr2[i].createdAt,\n        desc: arr2[i].desc,\n        source: arr2[i].source,\n        used: true\n      });\n    }\n\n    this.setState({\n      data: data2\n    });\n  }\n\n  componentDidMount() {\n    fetch('http://gank.io/api/today').then(result => result.json()).then(result => this.changeData(result)).catch(e => this.setState({\n      error: e\n    }));\n  }\n\n  save(form, key) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n\n      const newData = [...this.state.data];\n      const index = newData.findIndex(item => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, _objectSpread({}, item, {}, row));\n        this.setState({\n          data: newData,\n          editingKey: ''\n        });\n      } else {\n        newData.push(row);\n        this.setState({\n          data: newData,\n          editingKey: ''\n        });\n      }\n    });\n  }\n\n  edit(key) {\n    this.setState({\n      editingKey: key\n    });\n  }\n\n  render() {\n    const components = {\n      body: {\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return _objectSpread({}, col, {\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === 'age' ? 'number' : 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record)\n        })\n      });\n    });\n    const data = this.state.data;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, data ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showModal,\n      style: {\n        marginBottom: 16,\n        marginTop: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, \"Add a row\"), React.createElement(CollectionCreateForm, {\n      wrappedComponentRef: this.saveFormRef,\n      visible: this.state.visible,\n      onCancel: this.handleCancel,\n      onCreate: this.handleCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }), React.createElement(EditableContext.Provider, {\n      value: this.props.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(Table, {\n      components: components,\n      bordered: true,\n      dataSource: this.state.data,\n      columns: columns,\n      rowClassName: \"editable-row\",\n      pagination: {\n        onChange: this.cancel\n      },\n      rowKey: data => data.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }))) : React.createElement(Spin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst EditableFormTable = Form.create()(EditableTable);\n\nclass Editable extends React.Component {\n  render() {\n    return React.createElement(EditableFormTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Editable;","map":{"version":3,"sources":["/home/grace/test/my-app/src/editablecell.js"],"names":["Button","Modal","Radio","Table","Input","InputNumber","Popconfirm","Form","Spin","Icon","React","Highlighter","data","CollectionCreateForm","create","name","Component","render","props","visible","onCancel","onCreate","form","getFieldDecorator","rules","required","message","initialValue","EditableContext","createContext","EditableCell","getInput","inputType","renderCell","editing","dataIndex","title","record","index","children","restProps","margin","EditableTable","constructor","getColumnSearchProps","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","toString","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","select","text","state","searchedColumn","backgroundColor","searchText","setState","showModal","handleCancel","handleCreate","formRef","validateFields","err","values","Newdatas","push","handleDelete","key","filter","item","saveFormRef","isEditing","editingKey","cancel","columns","editable","ellipsis","length","save","edit","changeData","result","arr","data2","data1","results","k","arr2","concat","apply","console","log","i","publishedAt","type","url","who","_id","createdAt","desc","source","used","componentDidMount","fetch","then","json","catch","error","row","newData","findIndex","splice","components","body","cell","map","col","onCell","marginTop","onChange","EditableFormTable","Editable"],"mappings":"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","sourcesContent":["import { Button, Modal, Radio, Table, Input, InputNumber, Popconfirm, Form, Spin ,Icon} from 'antd';\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport Highlighter from 'react-highlight-words';\n\nlet data = null;\n\nconst CollectionCreateForm = Form.create({ name: 'form_in_modal' })(\n    // eslint-disable-next-line\n    class extends React.Component {\n      render() {\n        const { visible, onCancel, onCreate, form } = this.props;\n        const { getFieldDecorator } = form;\n        return (\n          <Modal\n            visible={visible}\n            title=\"Create a new collection\"\n            okText=\"Create\"\n            onCancel={onCancel}\n            onOk={onCreate}\n          >\n            <Form layout=\"vertical\">\n              <Form.Item label=\"who\">\n                {getFieldDecorator('who', {\n                  rules: [{ required: true, message: 'Please input the name of collection!' }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label=\"desc\">\n                {getFieldDecorator('desc')(<Input type=\"textarea\" />)}\n              </Form.Item>\n              <Form.Item label=\"type\">\n                {getFieldDecorator('type', {\n                  initialValue: 'Android',\n                })(<Input type=\"textarea\" />)}\n              </Form.Item>\n              <Form.Item label=\"url\">\n                {getFieldDecorator('url', {\n                  initialValue: 'www.baidu.com',\n                })(<Input type=\"textarea\" />)}\n              </Form.Item>\n              <Form.Item label=\"createdAt\">\n                {getFieldDecorator('createdAt', {\n                  initialValue: 'null',\n                })(<Input type=\"textarea\" />)}\n              </Form.Item>\n              <Form.Item label=\"Source\">\n                {getFieldDecorator('Source', {\n                  initialValue: 'Chrome',\n                })(<Input type=\"textarea\" />)}\n              </Form.Item>\n              <Form.Item label=\"Source\">\n                {getFieldDecorator('Source', {\n                  initialValue: 'Chrome',\n                })(<Input type=\"textarea\" />)}\n              </Form.Item>\n            </Form>\n          </Modal>\n        );\n      }\n    },\n  );\n\nconst EditableContext = React.createContext();\n\nclass EditableCell extends React.Component {\n  getInput = () => {\n    if (this.props.inputType === 'number') {\n      return <InputNumber />;\n    }\n    return <Input />;\n  };\n\n  renderCell = ({ getFieldDecorator }) => {\n    const {\n      editing,\n      dataIndex,\n      title,    \n      inputType,\n      record,\n      index,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editing ? (\n          <Form.Item style={{ margin: 0 }}>\n            {getFieldDecorator(dataIndex, {\n              rules: [\n                {\n                  required: true,\n                  message: `Please Input ${title}!`,\n                },\n              ],\n              initialValue: record[dataIndex],\n            })(this.getInput())}\n          </Form.Item>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  };\n\n  render() {\n    return <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>;\n  }\n}\n\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { data, editingKey: '',visible: false, searchText: '',searchedColumn: '',};\n    this.columns = [\n      {\n        title: 'who',\n        dataIndex: 'who',\n        editable: true,\n        ...this.getColumnSearchProps('who'),\n      },\n      {\n        title:'desc',\n        dataIndex:'desc',\n        width:'30%',\n        editable: true,\n        ellipsis: true,\n      },\n      {\n        title: 'type',\n        dataIndex: 'type',\n      },\n      {\n        title:'url',\n        dataIndex:'url',\n        editable: true,\n        render: text => <a href={text} target=\"_blank\">链接</a>,\n      },\n      {\n        title: 'createdAt',\n        dataIndex: 'createdAt',\n        width:'15%',\n      },\n      {\n        title: 'source',\n        dataIndex: 'source',\n        editable: true,\n      },\n      {\n        title: 'Delete',\n        dataIndex: 'Delete',\n        render: (text, record) =>\n          this.state.data.length >= 1 ? (\n            <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record.key)}>\n              <a>Delete</a>\n            </Popconfirm>\n          ) : null,\n      },  \n      {\n        title: 'operation',\n        dataIndex: 'operation',\n        render: (text, record) => {\n\n        const { editingKey } = this.state;\n         const {data} = this.state\n          const editable = this.isEditing(record);\n          return editable ? (\n            <span>\n              <EditableContext.Consumer>\n                {form => (\n                  <a\n                    onClick={() => this.save(form, record.key)}\n                    style={{ marginRight: 8 }}\n                  >\n                    Save\n                  </a>\n                )}\n              </EditableContext.Consumer>\n              <Popconfirm title=\"Sure to cancel?\" onConfirm={() => this.cancel(record.key)}>\n                <a>Cancel</a>\n              </Popconfirm>\n            </span>\n          ) : (\n            <a disabled={editingKey !== ''} onClick={() => this.edit(record.key)}>\n              Edit\n            </a>\n          );\n        },\n      },\n    ];\n  }\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          icon=\"search\"\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Search\n        </Button>\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          Reset\n        </Button>\n      </div>\n    ),\n    filterIcon: filtered => (\n      <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        .toString()\n        .toLowerCase()\n        .includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text => (\n    (this.state.searchedColumn === dataIndex) ?\n      <Highlighter\n        highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n        searchWords={[this.state.searchText]}\n        autoEscape\n        textToHighlight={text.toString()}\n      />\n      : text\n    ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({ \n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n      });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n  showModal = () => {\n    this.setState({ visible: true });\n  };\n\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  handleCreate = () => {\n    const { form } = this.formRef.props;\n    form.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n      Newdatas = Newdatas.push(values)\n      this.setState({ data : Newdatas})\n      this.setState({ visible: false });\n    });\n  };\n\n  handleDelete = key => {\n    const data= [...this.state.data];\n    this.setState({ data: data.filter(item => item.key !== key) });\n  };\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n changeData(result){\n    let arr = []\n    let data2 = []\n    const data1 = result.results\n\n    for(let k in data1){\n        arr.push(data1[k])\n    }\n    let arr2 = [].concat.apply([], arr);\n    console.log(arr2)\n    \n    for (let i = 0; i < arr2.length; i++) {\n        data2.push({\n            publishedAt:arr2[i].publishedAt,\n            type:arr2[i].type,\n            url:arr2[i].url,\t\n            who:arr2[i].who,\n            key: arr2[i]._id,\n            createdAt:arr2[i].createdAt,\n            desc:arr2[i].desc,\n            source:arr2[i].source,\n\n\n            used:true,\n        });\n   }\n \n    this.setState({data : data2})\n  }\n\n  componentDidMount(){\n  fetch('http://gank.io/api/today')\n    .then(result => result.json())\n    .then(result => this.changeData(result))\n    .catch(e => this.setState({ error: e }))\n  }\n\n\n  isEditing = record => record.key === this.state.editingKey;\n\n  cancel = () => {\n    this.setState({ editingKey: '' });\n  };\n\n  save(form, key) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n      const newData = [...this.state.data];\n      const index = newData.findIndex(item => key === item.key);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, {\n          ...item,\n          ...row,\n        });\n        this.setState({ data: newData, editingKey: '' });\n      } else {\n        newData.push(row);\n        this.setState({ data: newData, editingKey: '' });\n      }\n    });\n  }\n\n  edit(key) {\n    this.setState({ editingKey: key });\n  }\n\n  render() {\n    const components = {\n      body: {\n        cell: EditableCell,\n      },\n    };\n\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === 'age' ? 'number' : 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record),\n        }),\n      };\n    });\n    const {data} = this.state;\n    return (\n   <div>\n     { data\n     ? <div>\n            <Button type=\"primary\" onClick={this.showModal} style={{marginBottom: 16,marginTop: 16}}>\n                Add a row\n            </Button>\n            <CollectionCreateForm\n                wrappedComponentRef={this.saveFormRef}\n                visible={this.state.visible}\n                onCancel={this.handleCancel}\n                onCreate={this.handleCreate}\n            />\n            <EditableContext.Provider value={this.props.form}>\n                <Table\n                components={components}\n                bordered\n                dataSource={this.state.data}\n                columns={columns}\n                rowClassName=\"editable-row\"\n                pagination={{\n                onChange: this.cancel,\n                }}\n                rowKey= {data => data.key}\n                />\n            </EditableContext.Provider>\n      </div>\n     :<Spin />}\n    </div>\n    );\n  }\n}\n\nconst EditableFormTable = Form.create()(EditableTable);\n\nclass Editable extends React.Component {\n    render(){\n        return <EditableFormTable />\n    }\n\n}\n\nexport default Editable"]},"metadata":{},"sourceType":"module"}