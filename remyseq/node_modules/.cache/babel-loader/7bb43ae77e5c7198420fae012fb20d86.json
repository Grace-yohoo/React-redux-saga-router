{"ast":null,"code":"var _jsxFileName = \"/home/grace/test/my-app/src/form.js\";\nimport { Form, Row, Col, Input, Button, Icon } from 'antd';\nimport React from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nclass AdvancedSearchForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      expand: false\n    };\n\n    this.handleSearch = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        console.log('Received values of form: ', values);\n      });\n    };\n\n    this.handleReset = () => {\n      this.props.form.resetFields();\n    };\n\n    this.toggle = () => {\n      const expand = this.state.expand;\n      this.setState({\n        expand: !expand\n      });\n    };\n  }\n\n  // To generate mock Form.Item\n  getFields() {\n    const count = this.state.expand ? 10 : 2;\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const children = [];\n\n    for (let i = 0; i < 10; i++) {\n      children.push(React.createElement(Col, {\n        span: 8,\n        key: i,\n        style: {\n          display: i < count ? 'block' : 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        label: \"Field \".concat(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, getFieldDecorator(\"field-\".concat(i), {\n        rules: [{\n          required: true,\n          message: 'Input something!'\n        }]\n      })(React.createElement(Input, {\n        placeholder: \"placeholder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      })))));\n    }\n\n    return children;\n  }\n\n  render() {\n    return React.createElement(Form, {\n      className: \"ant-advanced-search-form\",\n      onSubmit: this.handleSearch,\n      style: {\n        margin: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Row, {\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.getFields()), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 24,\n      style: {\n        textAlign: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Search\"), React.createElement(Button, {\n      style: {\n        marginLeft: 8\n      },\n      onClick: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Clear\"), React.createElement(\"a\", {\n      style: {\n        marginLeft: 8,\n        fontSize: 12\n      },\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Collapse \", React.createElement(Icon, {\n      type: this.state.expand ? 'up' : 'down',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst WrappedAdvancedSearchForm = Form.create({\n  name: 'advanced_search'\n})(AdvancedSearchForm);\n\nclass Myfrom extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(WrappedAdvancedSearchForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Myfrom;","map":{"version":3,"sources":["/home/grace/test/my-app/src/form.js"],"names":["Form","Row","Col","Input","Button","Icon","React","AdvancedSearchForm","Component","state","expand","handleSearch","e","preventDefault","props","form","validateFields","err","values","console","log","handleReset","resetFields","toggle","setState","getFields","count","getFieldDecorator","children","i","push","display","rules","required","message","render","margin","textAlign","marginLeft","fontSize","WrappedAdvancedSearchForm","create","name","Myfrom"],"mappings":"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","sourcesContent":["import { Form, Row, Col, Input, Button, Icon } from 'antd';\nimport React from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nclass AdvancedSearchForm extends React.Component {\n    state = {\n      expand: false,\n    };\n  \n    // To generate mock Form.Item\n    getFields() {\n      const count = this.state.expand ? 10 : 2;\n      const { getFieldDecorator } = this.props.form;\n      const children = [];\n      for (let i = 0; i < 10; i++) {\n        children.push(\n          <Col span={8} key={i} style={{ display: i < count ? 'block' : 'none' }}>\n            <Form.Item label={`Field ${i}`}>\n              {getFieldDecorator(`field-${i}`, {\n                rules: [\n                  {\n                    required: true,\n                    message: 'Input something!',\n                  },\n                ],\n              })(<Input placeholder=\"placeholder\" />)}\n            </Form.Item>\n          </Col>,\n        );\n      }\n      return children;\n    }\n  \n    handleSearch = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        console.log('Received values of form: ', values);\n      });\n    };\n  \n    handleReset = () => {\n      this.props.form.resetFields();\n    };\n  \n    toggle = () => {\n      const { expand } = this.state;\n      this.setState({ expand: !expand });\n    };\n  \n    render() {\n      return (\n        <Form className=\"ant-advanced-search-form\" onSubmit={this.handleSearch} style={{margin:20}}>\n          <Row gutter={24}>{this.getFields()}</Row>\n          <Row>\n            <Col span={24} style={{ textAlign: 'right' }}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Search\n              </Button>\n              <Button style={{ marginLeft: 8 }} onClick={this.handleReset}>\n                Clear\n              </Button>\n              <a style={{ marginLeft: 8, fontSize: 12 }} onClick={this.toggle}>\n                Collapse <Icon type={this.state.expand ? 'up' : 'down'} />\n              </a>\n            </Col>\n          </Row>\n        </Form>\n      );\n    }\n  }\n\nconst WrappedAdvancedSearchForm = Form.create({ name: 'advanced_search' })(AdvancedSearchForm);\nclass Myfrom extends React.Component {\n    render(){\n        return(\n         <div>\n            <WrappedAdvancedSearchForm />\n            {/* <div className=\"search-result-list\">Search Result List</div> */}\n          </div>\n        )\n    \n    }\n \n}\n\nexport default Myfrom"]},"metadata":{},"sourceType":"module"}