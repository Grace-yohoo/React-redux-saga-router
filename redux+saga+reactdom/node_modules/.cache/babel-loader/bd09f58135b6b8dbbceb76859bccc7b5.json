{"ast":null,"code":"import _defineProperty from \"/home/grace/Desktop/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH } from '../ActionTypes/tablelist';\nconst initialState = {\n  data: null,\n  dataSearch: null\n};\nexport const tablelistReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH:\n      return _objectSpread({}, state, {\n        data: action.payload,\n        dataSearch: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/grace/Desktop/app/src/Reducer/tablelist.js"],"names":["FETCH","initialState","data","dataSearch","tablelistReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAAQA,KAAR,QAAoB,0BAApB;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAG,IADU;AAEjBC,EAAAA,UAAU,EAAE;AAFK,CAArB;AAOA,OAAO,MAAOC,gBAAgB,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAmC;AAChE,UAAQA,MAAM,CAACC,IAAf;AACK,SAAKP,KAAL;AACG,+BACOK,KADP;AAEIH,QAAAA,IAAI,EAAGI,MAAM,CAACE,OAFlB;AAGIL,QAAAA,UAAU,EAAEG,MAAM,CAACE;AAHvB;;AAQH;AACI,aAAOH,KAAP;AAXT;AAaH,CAdM","sourcesContent":["import {FETCH} from '../ActionTypes/tablelist'\n\n\nconst initialState = {\n    data : null,\n    dataSearch :null\n};\n\n\n\nexport const  tablelistReducer = (state = initialState, action ) => {\n    switch (action.type) {\n         case FETCH:\n            return {\n                ...state,\n                data : action.payload,\n                dataSearch :action.payload,\n            }\n\n             \n     \n         default:\n             return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}