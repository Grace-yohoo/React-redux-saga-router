{"ast":null,"code":"import _defineProperty from \"/home/grace/test/redux/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH, DELETE, CREATE, SEARCH, RESET, SAVE } from '../ActionTypes/tablelist';\nconst initialState = {\n  data: ''\n};\nexport const tablelistReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH:\n      return _objectSpread({}, state, {\n        data: action.payload\n      });\n\n    case DELETE:\n      return _objectSpread({}, state, {\n        data: action.payload\n      });\n\n    case CREATE:\n      {\n        return _objectSpread({}, state, {\n          data: action.payload\n        });\n      }\n\n    case SEARCH:\n      {\n        return _objectSpread({}, state, {\n          data: action.payload\n        });\n      }\n\n    case SAVE:\n      {\n        return _objectSpread({}, state, {\n          data: action.payload\n        });\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/grace/test/redux/src/Reducer/tablelist.js"],"names":["FETCH","DELETE","CREATE","SEARCH","RESET","SAVE","initialState","data","tablelistReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAAQA,KAAR,EAAeC,MAAf,EAAsBC,MAAtB,EAA6BC,MAA7B,EAAoCC,KAApC,EAA0CC,IAA1C,QAAqD,0BAArD;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAG;AADU,CAArB;AAMA,OAAO,MAAOC,gBAAgB,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAmC;AAChE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,KAAL;AACI,+BACOS,KADP;AAEIF,QAAAA,IAAI,EAAGG,MAAM,CAACE;AAFlB;;AAIJ,SAAKX,MAAL;AACI,+BACOQ,KADP;AAEIF,QAAAA,IAAI,EAACG,MAAM,CAACE;AAFhB;;AAKJ,SAAKV,MAAL;AAAa;AACT,iCACOO,KADP;AAEIF,UAAAA,IAAI,EAACG,MAAM,CAACE;AAFhB;AAIF;;AACF,SAAKT,MAAL;AAAa;AACT,iCACOM,KADP;AAEIF,UAAAA,IAAI,EAACG,MAAM,CAACE;AAFhB;AAIH;;AACD,SAAKP,IAAL;AAAW;AACP,iCACOI,KADP;AAEIF,UAAAA,IAAI,EAACG,MAAM,CAACE;AAFhB;AAIH;;AAGD;AACI,aAAOH,KAAP;AAjCR;AAmCH,CApCM","sourcesContent":["import {FETCH, DELETE,CREATE,SEARCH,RESET,SAVE} from '../ActionTypes/tablelist'\n\n\nconst initialState = {\n    data : '',\n};\n\n\n\nexport const  tablelistReducer = (state = initialState, action ) => {\n    switch (action.type) {\n        case FETCH:\n            return {\n                ...state,\n                data : action.payload,\n            }\n        case DELETE:\n            return {\n                ...state,\n                data:action.payload\n            }\n             \n        case CREATE: {\n            return {\n                ...state,\n                data:action.payload\n            }\n         }\n        case SEARCH: {\n            return {\n                ...state,\n                data:action.payload\n            }\n        }\n        case SAVE: {\n            return {\n                ...state,\n                data:action.payload\n            }\n        }\n\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}