{"ast":null,"code":"import { put, takeEvery } from 'redux-saga/effects';\nimport { fetcha, fetchc, change, fetch1 } from '../Request/request'; //put 与actiontype相同\n//Mysql 请求数据 (初始渲染  重置)\n\nfunction* fetchUser() {\n  const data = yield fetch1(); // const response = yield fetchb('http://localhost:8080/')\n  // const data = yield change(response)\n\n  yield put({\n    type: \"fetch\",\n    payload: data\n  });\n} //MYSQL 删除\n\n\nfunction* mysqlDelFectch(val) {\n  const id = yield val.key;\n  yield fetcha('http://localhost:8080/delete', id); //重新请求数据\n  // const response = yield fetchb('http://localhost:8080/')\n  // const data = yield change(response)\n\n  const data = yield fetch1();\n  yield put({\n    type: \"delete\",\n    payload: data\n  });\n} //MYSQL 添加\n\n\nfunction* mysqlAddFectch(val) {\n  const data1 = yield val.data;\n  yield fetcha('http://localhost:8080/add', data1); // const response = yield fetchb('http://localhost:8080/')\n  // const data = yield change(response)\n\n  const data = yield fetch1();\n  yield put({\n    type: 'create',\n    payload: data\n  });\n} //MYSQL 搜索\n\n\nfunction* mysqlSearchFectch(val) {\n  const name = yield val.value;\n  const response = yield fetchc('http://localhost:8080/search', name);\n  const data = yield change(response);\n  yield put({\n    type: 'search',\n    payload: data\n  });\n} //MYSQL 修改\n\n\nfunction* mysqlSaveFectch(val) {\n  const data1 = yield val.row;\n  yield fetcha('http://localhost:8080/change', data1); // const response = yield fetchb('http://localhost:8080/')\n  // const data = yield change(response)\n\n  const data = yield fetch1();\n  yield put({\n    type: 'save',\n    payload: data\n  });\n} //监听与组件type相同\n\n\nfunction* mySaga() {\n  yield takeEvery(\"feh\", fetchUser);\n  yield takeEvery('del', mysqlDelFectch);\n  yield takeEvery('add', mysqlAddFectch);\n  yield takeEvery('sear', mysqlSearchFectch);\n  yield takeEvery('sav', mysqlSaveFectch);\n}\n\nexport default mySaga;","map":{"version":3,"sources":["/home/grace/test/redux+saga+reactdom/src/saga/index.js"],"names":["put","takeEvery","fetcha","fetchc","change","fetch1","fetchUser","data","type","payload","mysqlDelFectch","val","id","key","mysqlAddFectch","data1","mysqlSearchFectch","name","value","response","mysqlSaveFectch","row","mySaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,QAA+B,oBAA/B;AACA,SAASC,MAAT,EAAgBC,MAAhB,EAAuBC,MAAvB,EAA8BC,MAA9B,QAA2C,oBAA3C,C,CAIA;AACA;;AACA,UAAUC,SAAV,GAAsB;AAElB,QAAMC,IAAI,GAAG,MAAMF,MAAM,EAAzB,CAFkB,CAGlB;AAEA;;AAEA,QAAML,GAAG,CAAC;AAACQ,IAAAA,IAAI,EAAE,OAAP;AAAgBC,IAAAA,OAAO,EAACF;AAAxB,GAAD,CAAT;AACH,C,CAED;;;AACA,UAAUG,cAAV,CAAyBC,GAAzB,EAA6B;AACzB,QAAMC,EAAE,GAAG,MAAMD,GAAG,CAACE,GAArB;AAEA,QAAMX,MAAM,CAAC,8BAAD,EAAgCU,EAAhC,CAAZ,CAHyB,CAKzB;AACA;AAEA;;AACA,QAAML,IAAI,GAAG,MAAMF,MAAM,EAAzB;AAEA,QAAML,GAAG,CAAC;AAACQ,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,OAAO,EAACF;AAAzB,GAAD,CAAT;AACH,C,CAED;;;AACA,UAAUO,cAAV,CAAyBH,GAAzB,EAA6B;AACzB,QAAMI,KAAK,GAAG,MAAMJ,GAAG,CAACJ,IAAxB;AAEA,QAAML,MAAM,CAAC,2BAAD,EAA6Ba,KAA7B,CAAZ,CAHyB,CAKzB;AAEA;;AACA,QAAMR,IAAI,GAAG,MAAMF,MAAM,EAAzB;AAEA,QAAML,GAAG,CAAE;AAACQ,IAAAA,IAAI,EAAC,QAAN;AAAgBC,IAAAA,OAAO,EAACF;AAAxB,GAAF,CAAT;AACH,C,CAED;;;AACA,UAAUS,iBAAV,CAA4BL,GAA5B,EAAgC;AAC5B,QAAMM,IAAI,GAAG,MAAMN,GAAG,CAACO,KAAvB;AAEA,QAAMC,QAAQ,GAAG,MAAMhB,MAAM,CAAC,8BAAD,EAAgCc,IAAhC,CAA7B;AAEA,QAAMV,IAAI,GAAG,MAAMH,MAAM,CAACe,QAAD,CAAzB;AAEA,QAAMnB,GAAG,CAAE;AAACQ,IAAAA,IAAI,EAAC,QAAN;AAAgBC,IAAAA,OAAO,EAACF;AAAxB,GAAF,CAAT;AACH,C,CAED;;;AACA,UAAUa,eAAV,CAA0BT,GAA1B,EAA8B;AAC1B,QAAMI,KAAK,GAAG,MAAMJ,GAAG,CAACU,GAAxB;AAEA,QAAMnB,MAAM,CAAC,8BAAD,EAAgCa,KAAhC,CAAZ,CAH0B,CAK1B;AAEA;;AAEA,QAAMR,IAAI,GAAG,MAAMF,MAAM,EAAzB;AAEA,QAAML,GAAG,CAAC;AAACQ,IAAAA,IAAI,EAAC,MAAN;AAAaC,IAAAA,OAAO,EAACF;AAArB,GAAD,CAAT;AACH,C,CAGD;;;AACC,UAAUe,MAAV,GAAmB;AACjB,QAAMrB,SAAS,CAAC,KAAD,EAAQK,SAAR,CAAf;AACA,QAAML,SAAS,CAAC,KAAD,EAAQS,cAAR,CAAf;AACA,QAAMT,SAAS,CAAC,KAAD,EAAQa,cAAR,CAAf;AACA,QAAMb,SAAS,CAAC,MAAD,EAASe,iBAAT,CAAf;AACA,QAAMf,SAAS,CAAC,KAAD,EAAQmB,eAAR,CAAf;AACD;;AAGD,eAAeE,MAAf","sourcesContent":["import { put, takeEvery } from 'redux-saga/effects';\nimport { fetcha,fetchc,change,fetch1} from '../Request/request'\n\n\n\n//put 与actiontype相同\n//Mysql 请求数据 (初始渲染  重置)\nfunction* fetchUser() {\n\n    const data = yield fetch1()\n    // const response = yield fetchb('http://localhost:8080/')\n\n    // const data = yield change(response)\n\n    yield put({type: \"fetch\", payload:data});   \n}\n\n//MYSQL 删除\nfunction* mysqlDelFectch(val){\n    const id = yield val.key\n\n    yield fetcha('http://localhost:8080/delete',id)\n\n    //重新请求数据\n    // const response = yield fetchb('http://localhost:8080/')\n\n    // const data = yield change(response)\n    const data = yield fetch1()\n\n    yield put({type: \"delete\", payload:data});\n}\n\n//MYSQL 添加\nfunction* mysqlAddFectch(val){\n    const data1 = yield val.data\n    \n    yield fetcha('http://localhost:8080/add',data1)\n\n    // const response = yield fetchb('http://localhost:8080/')\n\n    // const data = yield change(response)\n    const data = yield fetch1()\n\n    yield put ({type:'create' ,payload:data})\n}\n\n//MYSQL 搜索\nfunction* mysqlSearchFectch(val){\n    const name = yield val.value\n\n    const response = yield fetchc('http://localhost:8080/search',name)\n\n    const data = yield change(response)\n\n    yield put ({type:'search' ,payload:data})\n}\n\n//MYSQL 修改\nfunction* mysqlSaveFectch(val){\n    const data1 = yield val.row\n\n    yield fetcha('http://localhost:8080/change',data1)\n    \n    // const response = yield fetchb('http://localhost:8080/')\n\n    // const data = yield change(response)\n\n    const data = yield fetch1()\n\n    yield put({type:'save',payload:data})\n}\n\n\n//监听与组件type相同\n function* mySaga() {\n   yield takeEvery(\"feh\", fetchUser);\n   yield takeEvery('del', mysqlDelFectch)\n   yield takeEvery('add', mysqlAddFectch)\n   yield takeEvery('sear', mysqlSearchFectch)\n   yield takeEvery('sav', mysqlSaveFectch)\n }\n\n \n export default mySaga;\n\n"]},"metadata":{},"sourceType":"module"}