{"ast":null,"code":"import _defineProperty from \"/home/grace/test/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/home/grace/test/my-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/grace/test/my-app/src/table.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Spin } from 'antd';\nimport { Modal, Button } from 'antd';\nimport { Table, Input, Popconfirm, Form, Icon, Radio } from 'antd';\nimport Highlighter from \"react-highlight-words\";\nimport { tsParenthesizedType } from '@babel/types';\nconst EditableContext = React.createContext();\n\nconst EditableRow = (_ref) => {\n  let form = _ref.form,\n      index = _ref.index,\n      props = _objectWithoutProperties(_ref, [\"form\", \"index\"]);\n\n  return React.createElement(EditableContext.Provider, {\n    value: form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"tr\", Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })));\n};\n\nconst EditableFormRow = Form.create()(EditableRow);\nconst CollectionCreateForm = Form.create({\n  name: 'form_in_modal'\n})( // eslint-disable-next-line\nclass extends React.Component {\n  render() {\n    const _this$props = this.props,\n          visible = _this$props.visible,\n          onCancel = _this$props.onCancel,\n          onCreate = _this$props.onCreate,\n          form = _this$props.form;\n    const getFieldDecorator = form.getFieldDecorator;\n    return React.createElement(Modal, {\n      visible: visible,\n      title: \"Create a new collection\",\n      okText: \"Create\",\n      onCancel: onCancel,\n      onOk: onCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Form, {\n      layout: \"vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, getFieldDecorator('title', {\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, getFieldDecorator('description')(React.createElement(Input, {\n      type: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      className: \"collection-create-form_last-form-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, getFieldDecorator('modifier', {\n      initialValue: 'public'\n    })(React.createElement(Radio.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      value: \"public\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Public\"), React.createElement(Radio, {\n      value: \"private\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Private\")))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, getFieldDecorator('fw', {\n      initialValue: \"rwjfw\"\n    })), React.createElement(Form.Item, {\n      label: \"hello\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, getFieldDecorator('world', {\n      rules: [{\n        required: true,\n        message: 'Please input the title of collection!'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, getFieldDecorator('URL')(React.createElement(Input, {\n      type: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })))));\n  }\n\n});\n\nclass EditableCell extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editing: false\n    };\n\n    this.toggleEdit = () => {\n      const editing = !this.state.editing;\n      this.setState({\n        editing\n      }, () => {\n        if (editing) {\n          this.input.focus();\n        }\n      });\n    };\n\n    this.save = e => {\n      const _this$props2 = this.props,\n            record = _this$props2.record,\n            handleSave = _this$props2.handleSave;\n      this.form.validateFields((error, values) => {\n        if (error && error[e.currentTarget.id]) {\n          return;\n        }\n\n        this.toggleEdit();\n        handleSave(_objectSpread({}, record, {}, values));\n      });\n    };\n\n    this.renderCell = form => {\n      this.form = form;\n      const _this$props3 = this.props,\n            children = _this$props3.children,\n            dataIndex = _this$props3.dataIndex,\n            record = _this$props3.record,\n            title = _this$props3.title;\n      const editing = this.state.editing;\n      return editing ? React.createElement(Form.Item, {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, form.getFieldDecorator(dataIndex, {\n        rules: [{\n          required: true,\n          message: \"\".concat(title, \" is required.\")\n        }],\n        initialValue: record[dataIndex]\n      })(React.createElement(Input, {\n        ref: node => this.input = node,\n        onPressEnter: this.save,\n        onBlur: this.save,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }))) : React.createElement(\"div\", {\n        className: \"editable-cell-value-wrap\",\n        style: {\n          paddingRight: 24\n        },\n        onClick: this.toggleEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, children);\n    };\n  }\n\n  render() {\n    const _this$props4 = this.props,\n          editable = _this$props4.editable,\n          dataIndex = _this$props4.dataIndex,\n          title = _this$props4.title,\n          record = _this$props4.record,\n          index = _this$props4.index,\n          handleSave = _this$props4.handleSave,\n          children = _this$props4.children,\n          restProps = _objectWithoutProperties(_this$props4, [\"editable\", \"dataIndex\", \"title\", \"record\", \"index\", \"handleSave\", \"children\"]);\n\n    return React.createElement(\"td\", Object.assign({}, restProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), editable ? React.createElement(EditableContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.renderCell) : children);\n  }\n\n}\n\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleCreate = () => {\n      const form = this.formRef.props.form;\n      form.validateFields((err, values) => {\n        if (err) {\n          return;\n        }\n\n        console.log('Received values of form: ', values);\n        console.log(values.fw);\n        form.resetFields();\n        this.setState({\n          visible: false\n        });\n      });\n    };\n\n    this.saveFormRef = formRef => {\n      this.formRef = formRef;\n    };\n\n    this.handleDelete = _id => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({\n        dataSource: dataSource.filter(item => item._id !== _id)\n      });\n    };\n\n    this.handleSave = row => {\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, _objectSpread({}, item, {}, row));\n      this.setState({\n        dataSource: newData\n      });\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => React.createElement(\"div\", {\n        style: {\n          padding: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(Input, {\n        ref: node => {\n          this.searchInput = node;\n        },\n        placeholder: \"Search \".concat(dataIndex),\n        value: selectedKeys[0],\n        onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n        onPressEnter: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n        style: {\n          width: 188,\n          marginBottom: 8,\n          display: 'block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        onClick: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n        icon: \"search\",\n        Source: true,\n        size: \"small\",\n        style: {\n          width: 90,\n          marginRight: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"Search\"), React.createElement(Button, {\n        onClick: () => this.handleReset(clearFilters),\n        size: \"small\",\n        style: {\n          width: 90\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, \"Reset\")),\n      filterIcon: filtered => React.createElement(Icon, {\n        type: \"search\",\n        style: {\n          color: filtered ? '#http://gank.io/api/today1890ff' : undefined\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }),\n      onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select());\n        }\n      },\n      render: text => this.state.searchedColumn === dataIndex ? React.createElement(Highlighter, {\n        highlightStyle: {\n          backgroundColor: '#ffc069',\n          padding: 0\n        },\n        searchWords: [this.state.searchText],\n        autoEscape: true,\n        textToHighlight: text.toString(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }) : text\n    });\n\n    this.handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n\n    this.handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n\n    this.columns = [_objectSpread({\n      title: 'who',\n      dataIndex: 'who',\n      editable: true\n    }, this.getColumnSearchProps('who')), {\n      title: 'desc',\n      dataIndex: 'desc',\n      width: '30%',\n      editable: true,\n      ellipsis: true\n    }, {\n      title: 'type',\n      dataIndex: 'type'\n    }, {\n      title: 'url',\n      dataIndex: 'url',\n      editable: true,\n      render: text => React.createElement(\"a\", {\n        href: text,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"\\u94FE\\u63A5\")\n    }, {\n      title: 'createdAt',\n      dataIndex: 'createdAt',\n      width: '15%'\n    }, {\n      title: 'publishedAt',\n      dataIndex: 'publishedAt',\n      width: '15%'\n    }, {\n      title: 'source',\n      dataIndex: 'source',\n      editable: true\n    }, {\n      title: 'operation',\n      dataIndex: 'operation',\n      render: (text, record) => this.state.dataSource.length >= 1 ? React.createElement(Popconfirm, {\n        title: \"Sure to delete?\",\n        onConfirm: () => this.handleDelete(record._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Delete\")) : null,\n      render: (text, record) => {\n        const editingKey = this.state.editingKey;\n        const editable = this.isEditing(record);\n        return editable ? React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, React.createElement(EditableContext.Consumer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, form => React.createElement(\"a\", {\n          onClick: () => this.save(form, record.key),\n          style: {\n            marginRight: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, \"Save\")), React.createElement(Popconfirm, {\n          title: \"Sure to cancel?\",\n          onConfirm: () => this.cancel(record.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, \"Cancel\"))) : React.createElement(\"a\", {\n          disabled: editingKey !== '',\n          onClick: () => this.edit(record.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, \"Edit\");\n      }\n    }];\n    this.state = {\n      dataSource: null,\n      count: 2,\n      error: null,\n      editingKey: ''\n    };\n    this.changeData = this.changeData.bind;\n  }\n\n  //获取数据\n  changeData(result) {\n    console.log(result);\n    let arr = [];\n    const data = result.results;\n\n    for (let k in data) {\n      arr.push(data[k]);\n    }\n\n    let arr2 = [].concat.apply([], arr);\n    console.log(arr2);\n    this.setState({\n      dataSource: arr2\n    });\n  }\n\n  componentDidMount() {\n    fetch('http://gank.io/api/today').then(result => result.json()).then(result => this.changeData(result)).catch(e => this.setState({\n      error: e\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          dataSource = _this$state.dataSource,\n          error = _this$state.error;\n    const components = {\n      body: {\n        row: EditableFormRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return _objectSpread({}, col, {\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, dataSource ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showModal,\n      style: {\n        marginBottom: 16,\n        marginTop: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, \"Add a row\"), React.createElement(CollectionCreateForm, {\n      wrappedComponentRef: this.saveFormRef,\n      visible: this.state.visible,\n      onCancel: this.handleCancel,\n      onCreate: this.handleCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }), React.createElement(Table, {\n      components: components,\n      rowClassName: () => 'editable-row',\n      bordered: true,\n      dataSource: dataSource,\n      columns: columns,\n      rowKey: dataSource => dataSource._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    })) : React.createElement(Spin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass Mytable extends React.Component {\n  render() {\n    return React.createElement(EditableTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Mytable;","map":{"version":3,"sources":["/home/grace/test/my-app/src/table.js"],"names":["React","Spin","Modal","Button","Table","Input","Popconfirm","Form","Icon","Radio","Highlighter","tsParenthesizedType","EditableContext","createContext","EditableRow","form","index","props","EditableFormRow","create","CollectionCreateForm","name","Component","render","visible","onCancel","onCreate","getFieldDecorator","rules","required","message","initialValue","EditableCell","state","editing","toggleEdit","setState","input","focus","save","e","record","handleSave","validateFields","error","values","currentTarget","id","renderCell","children","dataIndex","title","margin","node","paddingRight","editable","restProps","EditableTable","constructor","showModal","handleCancel","handleCreate","formRef","err","console","log","fw","resetFields","saveFormRef","handleDelete","_id","dataSource","filter","item","row","newData","findIndex","key","splice","getColumnSearchProps","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","searchInput","target","value","handleSearch","width","marginBottom","display","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","toString","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","select","text","searchedColumn","backgroundColor","searchText","columns","ellipsis","length","editingKey","isEditing","cancel","edit","count","changeData","bind","result","arr","data","results","k","push","arr2","concat","apply","componentDidMount","fetch","then","json","catch","components","body","cell","map","col","onCell","marginTop","Mytable"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Spin } from 'antd';\nimport { Modal, Button } from 'antd';\n\nimport { Table, Input, Popconfirm, Form ,Icon,Radio } from 'antd';\nimport Highlighter from \"react-highlight-words\";\nimport { tsParenthesizedType } from '@babel/types';\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ form, index, ...props }) => (\n  <EditableContext.Provider value={form}>\n    <tr {...props} />\n  </EditableContext.Provider>\n);\n\nconst EditableFormRow = Form.create()(EditableRow);\n\nconst CollectionCreateForm = Form.create({ name: 'form_in_modal' })(\n  // eslint-disable-next-line\n  class extends React.Component {\n    render() {\n      const { visible, onCancel, onCreate, form } = this.props;\n      const { getFieldDecorator } = form;\n      return (\n        <Modal\n          visible={visible}\n          title=\"Create a new collection\"\n          okText=\"Create\"\n          onCancel={onCancel}\n          onOk={onCreate}\n        >\n          <Form layout=\"vertical\">\n            <Form.Item label=\"Title\">\n              {getFieldDecorator('title', {\n                rules: [{ required: true, message: 'Please input the title of collection!' }],\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Description\">\n              {getFieldDecorator('description')(<Input type=\"textarea\" />)}\n            </Form.Item>\n            <Form.Item className=\"collection-create-form_last-form-item\">\n              {getFieldDecorator('modifier', {\n                initialValue: 'public',\n              })(\n                <Radio.Group>\n                  <Radio value=\"public\">Public</Radio>\n                  <Radio value=\"private\">Private</Radio>\n                </Radio.Group>,\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator('fw', {\n                initialValue: \"rwjfw\"\n              })}\n            </Form.Item>\n            <Form.Item label=\"hello\">\n              {getFieldDecorator('world', {\n                rules: [{ required: true, message: 'Please input the title of collection!' }],\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"type\">\n              {getFieldDecorator('URL')(<Input type=\"textarea\" />)}\n            </Form.Item>\n          </Form>\n        </Modal>\n      );\n    }\n  },\n);\n\nclass EditableCell extends React.Component {\n  state = {\n    editing: false,\n  };\n\n  toggleEdit = () => {\n    const editing = !this.state.editing;\n    this.setState({ editing }, () => {\n      if (editing) {\n        this.input.focus();\n      }\n    });\n  };\n\n  save = e => {\n    const { record, handleSave } = this.props;\n    this.form.validateFields((error, values) => {\n      if (error && error[e.currentTarget.id]) {\n        return;\n      }\n      this.toggleEdit();\n      handleSave({ ...record, ...values });\n    });\n  };\n\n  renderCell = form => {\n    this.form = form;\n    const { children, dataIndex, record, title } = this.props;\n    const { editing } = this.state;\n    return editing ? (\n      <Form.Item style={{ margin: 0 }}>\n        {form.getFieldDecorator(dataIndex, {\n          rules: [\n            {\n              required: true,\n              message: `${title} is required.`,\n            },\n          ],\n          initialValue: record[dataIndex],\n        })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\n      </Form.Item>\n    ) : (\n      <div\n        className=\"editable-cell-value-wrap\"\n        style={{ paddingRight: 24 }}\n        onClick={this.toggleEdit}\n      >\n        {children}\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      editable,\n      dataIndex,\n      title,\n      record,\n      index,\n      handleSave,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editable ? (\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n}\n\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.columns = [\n      {\n        title: 'who',\n        dataIndex: 'who',\n        editable: true,\n        ...this.getColumnSearchProps('who'),\n      },\n      {\n        title:'desc',\n        dataIndex:'desc',\n        width:'30%',\n        editable: true,\n        ellipsis: true,\n      },\n      {\n        title: 'type',\n        dataIndex: 'type',\n      },\n      {\n        title:'url',\n        dataIndex:'url',\n        editable: true,\n        render: text => <a href={text} target=\"_blank\">链接</a>,\n      },\n      {\n        title: 'createdAt',\n        dataIndex: 'createdAt',\n        width:'15%',\n      },\n      {\n        title: 'publishedAt',\n        dataIndex: 'publishedAt',\n        width:'15%',\n      },\n      {\n        title: 'source',\n        dataIndex: 'source',\n        editable: true,\n      },\n      {\n        title: 'operation',\n        dataIndex: 'operation',\n        render: (text, record) =>\n          this.state.dataSource.length >= 1 ? (\n            <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record._id)}>\n              <a>Delete</a>\n            </Popconfirm>\n          ) : null,\n          render: (text, record) => {\n            const { editingKey } = this.state;\n            const editable = this.isEditing(record);\n            return editable ? (\n              <span>\n                <EditableContext.Consumer>\n                  {form => (\n                    <a\n                      onClick={() => this.save(form, record.key)}\n                      style={{ marginRight: 8 }}\n                    >\n                      Save\n                    </a>\n                  )}\n                </EditableContext.Consumer>\n                <Popconfirm title=\"Sure to cancel?\" onConfirm={() => this.cancel(record.key)}>\n                  <a>Cancel</a>\n                </Popconfirm>\n              </span>\n            ) : (\n              <a disabled={editingKey !== ''} onClick={() => this.edit(record.key)}>\n                Edit\n              </a>\n            );\n        },\n      },\n    ];\n\n    this.state = {\n      dataSource: null,\n      count: 2,\n      error:null,\n      editingKey: ''\n    };\n    this.changeData = this.changeData.bind\n  }\n  showModal = () => {\n    this.setState({ visible: true });\n  };\n\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  handleCreate = () => {\n    const { form } = this.formRef.props;\n    form.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n       \n      console.log('Received values of form: ', values);\n      console.log(values.fw);\n      form.resetFields();\n      this.setState({ visible: false });\n    });\n  };\n\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  //获取数据\n  changeData(result){\n    console.log(result)\n    let arr = []\n    const data = result.results\n   \n    for(let k in data){\n       arr.push(data[k])\n    }\n    let arr2 = [].concat.apply([], arr);\n    console.log(arr2);\n    this.setState({dataSource : arr2})\n  }\n  componentDidMount(){\n  fetch('http://gank.io/api/today')\n    .then(result => result.json())\n    .then(result => this.changeData(result))\n    .catch(e => this.setState({ error: e }))\n  }\n\n  handleDelete = _id => {\n    const dataSource = [...this.state.dataSource];\n    this.setState({ dataSource: dataSource.filter(item => item._id !== _id) });\n  };\n\n  // handleAdd = () => {\n  //   const { count, dataSource } = this.state;\n  //   const timestamp = (new Date()).valueOf();\n  //   const newData = {\n  //     key: count,\n  //     _id: timestamp,\n  //     who: `defaultName ${count}`,\n  //     desc: 'defaultDesc',\n  //     type: `defalutType ${count}`,\n  //     url:'defaultUrl', \n  //     source:'defaultSource',\n  //   };\n  //   this.setState({\n  //     dataSource: [...dataSource, newData],\n  //     count: count + 1,\n  //   });\n  // };\n\n  handleSave = row => {\n    const newData = [...this.state.dataSource];\n    const index = newData.findIndex(item => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, {\n      ...item,\n      ...row,\n    });\n    this.setState({ dataSource: newData });\n  };\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          icon=\"search\"Source\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Search\n        </Button>\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          Reset\n        </Button>\n      </div>\n    ),\n    filterIcon: filtered => (\n      <Icon type=\"search\" style={{ color: filtered ? '#http://gank.io/api/today1890ff' : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        .toString()\n        .toLowerCase()\n        .includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text => (\n    (this.state.searchedColumn === dataIndex) ?\n      <Highlighter\n        highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n        searchWords={[this.state.searchText]}\n        autoEscape\n        textToHighlight={text.toString()}\n      />\n      : text\n    ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({ \n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n      });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({ \n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n      });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n  \n  render() {\n    const { dataSource ,error } = this.state;\n    const components = {\n      body: {\n        row: EditableFormRow,\n        cell: EditableCell,\n      },\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave,\n        }),\n      };\n    });\n\n    \n    return (\n      <div>\n        {dataSource\n        ? <div> \n        <Button type=\"primary\" onClick={this.showModal} style={{marginBottom: 16,marginTop: 16}}>\n          Add a row\n        </Button>\n        <CollectionCreateForm\n          wrappedComponentRef={this.saveFormRef}\n          visible={this.state.visible}\n          onCancel={this.handleCancel}\n          onCreate={this.handleCreate}\n        />\n        <Table\n          components={components}\n          rowClassName={() => 'editable-row'}\n          bordered\n          dataSource={dataSource}\n          columns={columns}\n          rowKey={dataSource => dataSource._id} \n        />\n        </div>\n        : <Spin />}\n      </div>\n    );\n  }\n}\n\nclass Mytable extends React.Component{\n  render(){\n    return( \n    <EditableTable />\n    )\n  }\n}\n\nexport default Mytable"]},"metadata":{},"sourceType":"module"}