{"ast":null,"code":"import _defineProperty from \"/home/grace/test/redux/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/home/grace/test/redux/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/grace/test/redux/src/Components/Table/index.js\",\n    _dec,\n    _class,\n    _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Table, Input, InputNumber, Popconfirm, Form, Spin, Button, Modal } from 'antd';\nimport 'antd/dist/antd.css';\nimport CollectionCreateForm from '../Create/Create';\nimport Myinput from '../Input/Input';\nimport { createDeleteAction, CreateSearchaction, CreateResetAction } from '../../Actions/tablelist';\nimport { connect } from 'react-redux';\nconst EditableContext = React.createContext(); //修改类\n\nclass EditableCell extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getInput = () => {\n      if (this.props.inputType === 'number') {\n        return React.createElement(InputNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      });\n    };\n\n    this.renderCell = ({\n      getFieldDecorator\n    }) => {\n      const _this$props = this.props,\n            editing = _this$props.editing,\n            dataIndex = _this$props.dataIndex,\n            title = _this$props.title,\n            inputType = _this$props.inputType,\n            record = _this$props.record,\n            index = _this$props.index,\n            children = _this$props.children,\n            restProps = _objectWithoutProperties(_this$props, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n      return React.createElement(\"td\", Object.assign({}, restProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), editing ? React.createElement(Form.Item, {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, getFieldDecorator(dataIndex, {\n        rules: [{\n          required: true,\n          message: \"Please Input \".concat(title, \"!\")\n        }],\n        initialValue: record[dataIndex]\n      })(this.getInput())) : children);\n    };\n  }\n\n  render() {\n    return React.createElement(EditableContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.renderCell);\n  }\n\n} //映射状态\n\n\nconst mapStateToProps = state => {\n  return {\n    tablelistReducer: state.tablelistReducer\n  };\n}; //映射方法\n\n\nconst mapDispatchToProps = {\n  createDeleteAction // createFetchAction\n\n}; //注入props\n\nlet EditableTable = (_dec = connect(mapStateToProps), _dec(_class = (_temp = class EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.isEditing = record => record.key === this.state.editingKey;\n\n    this.handleDelete = key => {\n      this.setState({\n        loading: true\n      });\n      this.props.dispatch(createDeleteAction(key));\n      setTimeout(() => {\n        this.setState({\n          loading: false\n        });\n      }, 300);\n    };\n\n    this.cancel = () => {\n      this.setState({\n        editingKey: ''\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleCreate = () => {\n      const form = this.formRef.props.form;\n      const data = this.props.tablelistReducer.data;\n      this.setState({\n        loading: true\n      });\n      form.validateFields((err, values) => {\n        this.setState({\n          visible: false\n        });\n\n        if (err) {\n          return;\n        }\n\n        let time = new Date().valueOf();\n        values.key = time;\n        data.push(values);\n        form.resetFields();\n        this.props.CreateAddaction(data);\n      });\n      setTimeout(() => {\n        this.setState({\n          loading: false\n        });\n      }, 300);\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.saveFormRef = formRef => {\n      this.formRef = formRef;\n    };\n\n    this.state = {\n      editingKey: '',\n      visible: false,\n      loading: false\n    };\n    const _data = this.props.tablelistReducer.data;\n    this.columns = [{\n      title: 'Name',\n      dataIndex: 'name',\n      editable: true\n    }, {\n      title: 'Description',\n      dataIndex: 'desc',\n      width: '30%',\n      editable: true,\n      ellipsis: true\n    }, {\n      title: 'Link',\n      dataIndex: 'url',\n      render: text => React.createElement(\"a\", {\n        href: text,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"\\u94FE\\u63A5\")\n    }, {\n      title: 'CreatedAt',\n      dataIndex: 'createdAt',\n      width: '15%'\n    }, {\n      title: 'Source',\n      dataIndex: 'source',\n      editable: true\n    }, {\n      title: 'Delete',\n      dataIndex: 'Delete',\n      render: (text, record) => this.props.store.home.data.length >= 1 ? React.createElement(Popconfirm, {\n        title: \"Sure to delete?\",\n        onConfirm: () => handleDelete(record.key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Delete\")) : null\n    }, {\n      title: 'Operation',\n      dataIndex: 'operation',\n      render: (text, record) => {\n        const _this$props$store$hom = this.props.store.home,\n              editingKey = _this$props$store$hom.editingKey,\n              edit = _this$props$store$hom.edit,\n              cancel = _this$props$store$hom.cancel,\n              isEditing = _this$props$store$hom.isEditing,\n              save = _this$props$store$hom.save;\n        const editable = isEditing(record);\n        return editable ? React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(EditableContext.Consumer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, form => React.createElement(\"a\", {\n          onClick: () => {\n            save(form, record.key);\n          },\n          style: {\n            marginRight: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, \"Save\")), React.createElement(Popconfirm, {\n          title: \"Sure to cancel?\",\n          onConfirm: () => {\n            cancel(record.key);\n            this.forceUpdate();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, \"Cancel\"))) : React.createElement(\"a\", {\n          disabled: editingKey !== '',\n          onClick: () => {\n            edit(record.key);\n            this.forceUpdate();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, \"Edit\");\n      }\n    }];\n    this.handleDelete = this.handleDelete.bind(this);\n    this.showModal = this.showModal.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleCreate = this.handleCreate.bind(this);\n    this.saveFormRef = this.saveFormRef.bind(this);\n    this.handSearch = this.handSearch.bind(this);\n    this.handReset = this.handReset.bind(this);\n  }\n\n  save(form, key) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n\n      const newData = [...this.state.data];\n      const index = newData.findIndex(item => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, _objectSpread({}, item, {}, row));\n        this.setState({\n          data: newData,\n          editingKey: ''\n        });\n      } else {\n        newData.push(row);\n        this.setState({\n          data: newData,\n          editingKey: ''\n        });\n      }\n    });\n  }\n\n  edit(key) {\n    this.setState({\n      editingKey: key\n    });\n  } //添加方法\n\n\n  //搜索方法\n  handSearch(value) {\n    this.setState({\n      loading: true\n    });\n    const data = this.props.tablelistReducer.data;\n    this.props.dispatch(CreateSearchaction(value, data));\n    setTimeout(() => {\n      this.setState({\n        loading: false\n      });\n    }, 300);\n  } //重置方法\n\n\n  handReset() {\n    this.setState({\n      loading: true\n    });\n    let dataSource = this.state.dataSource;\n    this.setState({\n      data: dataSource\n    });\n    this.props.dispatch(CreateResetAction());\n    setTimeout(() => {\n      this.setState({\n        loading: false\n      });\n    }, 300);\n  } //生命周期  加载后\n\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'feh'\n    });\n  }\n\n  render() {\n    console.log(this);\n    const components = {\n      body: {\n        cell: EditableCell\n      }\n    };\n    const data = this.props.tablelistReducer.data;\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return _objectSpread({}, col, {\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === 'age' ? 'number' : 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record)\n        })\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, data ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(Myinput, {\n      handSearch: this.handSearch,\n      handReset: this.handReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showModal,\n      style: {\n        marginLeft: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"\\u521B\\u5EFA\"), React.createElement(CollectionCreateForm, {\n      wrappedComponentRef: this.saveFormRef,\n      visible: this.state.visible,\n      onCancel: this.handleCancel,\n      onCreate: this.handleCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }), React.createElement(EditableContext.Provider, {\n      value: this.props.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(Table, {\n      components: components,\n      bordered: true,\n      dataSource: data,\n      loading: this.state.loading,\n      columns: columns,\n      rowClassName: \"editable-row\",\n      pagination: {\n        onChange: this.cancel\n      },\n      rowKey: data => data.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }))) : React.createElement(Spin, {\n      style: {\n        marginLeft: '900px',\n        marginTop: '200px'\n      },\n      tip: \"\\u52A0\\u8F7D\\u4E2D...\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }));\n  }\n\n}, _temp)) || _class);\nconst EditableFormTable = Form.create()(EditableTable);\n\nclass Mytable extends Component {\n  render() {\n    return React.createElement(EditableFormTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Mytable;","map":{"version":3,"sources":["/home/grace/test/redux/src/Components/Table/index.js"],"names":["React","Component","Table","Input","InputNumber","Popconfirm","Form","Spin","Button","Modal","CollectionCreateForm","Myinput","createDeleteAction","CreateSearchaction","CreateResetAction","connect","EditableContext","createContext","EditableCell","getInput","props","inputType","renderCell","getFieldDecorator","editing","dataIndex","title","record","index","children","restProps","margin","rules","required","message","initialValue","render","mapStateToProps","state","tablelistReducer","mapDispatchToProps","EditableTable","constructor","isEditing","key","editingKey","handleDelete","setState","loading","dispatch","setTimeout","cancel","handleCancel","visible","handleCreate","form","formRef","data","validateFields","err","values","time","Date","valueOf","push","resetFields","CreateAddaction","showModal","saveFormRef","columns","editable","width","ellipsis","text","store","home","length","edit","save","marginRight","forceUpdate","bind","handSearch","handReset","error","row","newData","findIndex","item","splice","value","dataSource","componentDidMount","type","console","log","components","body","cell","map","col","onCell","marginLeft","onChange","marginTop","EditableFormTable","create","Mytable"],"mappings":"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","sourcesContent":["\nimport React, {Component} from 'react';\nimport { Table, Input, InputNumber, Popconfirm, Form, Spin, Button, Modal } from 'antd';\nimport 'antd/dist/antd.css';\nimport CollectionCreateForm from '../Create/Create'\nimport Myinput from '../Input/Input'\nimport {createDeleteAction,CreateSearchaction,CreateResetAction} from '../../Actions/tablelist';\n\nimport {connect} from 'react-redux';\n\n\nconst EditableContext = React.createContext();\n\n\n\n//修改类\nclass EditableCell extends React.Component {\n    getInput = () => {\n      if (this.props.inputType === 'number') {\n        return <InputNumber />;\n      }\n      return <Input />;\n    };\n  \n    renderCell = ({ getFieldDecorator }) => {\n      const {\n        editing,\n        dataIndex,\n        title,\n        inputType,\n        record,\n        index,\n        children,\n        ...restProps\n      } = this.props;\n      return (\n        <td {...restProps}>\n          {editing ? (\n            <Form.Item style={{ margin: 0 }}>\n              {getFieldDecorator(dataIndex, {\n                rules: [\n                  {\n                    required: true,\n                    message: `Please Input ${title}!`,\n                  },\n                ],\n                initialValue: record[dataIndex],\n              })(this.getInput())}\n            </Form.Item>\n          ) : (\n            children\n          )}\n        </td>\n      );\n    };\n  \n    render() {\n\n      return <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>;\n    }\n}\n\n//映射状态\nconst mapStateToProps = (state) => {\n    return {\n      tablelistReducer : state.tablelistReducer\n    }\n}\n\n//映射方法\nconst mapDispatchToProps = {\n  createDeleteAction,\n  // createFetchAction\n}\n\n//注入props\n@connect(mapStateToProps)\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = { \n      editingKey: '',\n      visible: false, \n      loading: false,\n    };\n    \n    const {tablelistReducer:{data}} = this.props;\n\n    this.columns = [\n      {\n        title: 'Name',\n        dataIndex: 'name',\n        editable: true,\n      },\n      {\n        title:'Description',\n        dataIndex:'desc',\n        width:'30%',\n        editable: true,\n        ellipsis: true,\n      },\n      {\n        title:'Link',\n        dataIndex:'url',\n        render: text => <a href={text} target=\"_blank\">链接</a>,\n      },\n      {\n        title: 'CreatedAt',\n        dataIndex: 'createdAt',\n        width:'15%',\n      },\n      {\n        title: 'Source',\n        dataIndex: 'source',\n        editable: true,\n      },\n      {\n        title: 'Delete',\n        dataIndex: 'Delete',\n        render: (text, record) =>\n          this.props.store.home.data.length >= 1 ? (\n            <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record.key)}>\n              <a>Delete</a>\n            </Popconfirm>\n          ) : null,\n      },  \n      {\n        title: 'Operation',\n        dataIndex: 'operation',\n        render: (text, record) => {\n          const  {editingKey,edit,cancel,isEditing,save}= this.props.store.home;\n          const editable = isEditing(record);\n          return editable ? (\n            <span>\n              <EditableContext.Consumer>\n                {form => (\n                  <a\n                    onClick={() =>{\n                      save(form, record.key)\n                    }}\n                    style={{ marginRight: 8 }}\n                  >\n                    Save\n                  </a>\n                )}\n              </EditableContext.Consumer>\n              <Popconfirm title=\"Sure to cancel?\" onConfirm={() => {\n                  cancel(record.key);\n                  this.forceUpdate();\n                }}>\n                <a>Cancel</a>\n              </Popconfirm>\n            </span>\n          ) : (\n            <a disabled={editingKey !== ''} onClick={() => {\n                edit(record.key);\n                this.forceUpdate();\n              }}>\n              Edit\n            </a>\n          );\n        },\n      },\n    ];\n\n    this.handleDelete = this.handleDelete.bind(this);\n    this.showModal = this.showModal.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleCreate = this.handleCreate.bind(this);\n    this.saveFormRef = this.saveFormRef.bind(this);\n    this.handSearch = this.handSearch.bind(this);\n    this.handReset = this.handReset.bind(this);\n\n\n  }\n  \n   \n  isEditing = record => record.key === this.state.editingKey;\n\n  handleDelete = key => {\n     this.setState({loading:true})\n     this.props.dispatch(createDeleteAction(key))\n     setTimeout(()=> {\n      this.setState({loading:false})\n     },300)\n\n  };\n\n  cancel = () => {\n    this.setState({ editingKey: '' });\n  };\n\n  save(form, key) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n      const newData = [...this.state.data];\n      const index = newData.findIndex(item => key === item.key);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, {\n          ...item,\n          ...row,\n        });\n        this.setState({ data: newData, editingKey: '' });\n      } else {\n        newData.push(row);\n        this.setState({ data: newData, editingKey: '' });\n      }\n    });\n  }\n\n  edit(key) {\n    this.setState({ editingKey: key });\n  }\n\n  //添加方法\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  handleCreate = () => {\n    const { form } = this.formRef.props;\n    const {tablelistReducer:{data}} = this.props\n    this.setState({loading:true})\n\n    form.validateFields((err, values) => {\n      this.setState({visible: false });\n      if (err) {\n        return;\n      }\n      let time = (new Date()).valueOf();\n      values.key = time;\n      data.push(values);\n      form.resetFields();\n\n      this.props.CreateAddaction(data)\n     \n    });\n    setTimeout(()=> {\n      this.setState({loading:false})\n     },300)\n   \n  };\n\n  showModal = () => {\n    this.setState({ visible: true });\n  };\n\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  //搜索方法\n  handSearch(value){\n    this.setState({loading:true})\n    const {tablelistReducer:{data}} = this.props;\n    this.props.dispatch(CreateSearchaction(value,data))\n    setTimeout(()=> {\n      this.setState({loading:false})\n     },300)\n  }\n\n  //重置方法\n  handReset(){\n    this.setState({loading:true})\n    let {dataSource} = this.state;\n    this.setState({data: dataSource});\n    this.props.dispatch(CreateResetAction()) \n    setTimeout(()=> {\n      this.setState({loading:false})\n     },300)\n  }\n\n  //生命周期  加载后\n  componentDidMount(){\n    this.props.dispatch({type:'feh'})\n  }\n\n  \n  render() {\n    console.log(this)\n\n    const components = {\n      body: {\n        cell: EditableCell,\n      },\n    };\n    const {tablelistReducer:{data}} = this.props;\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === 'age' ? 'number' : 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record),\n        }),\n      };\n    });\n\n    return (\n      <div>\n        { data\n          ?<div>\n              \n              <Myinput handSearch={this.handSearch} handReset={this.handReset}></Myinput>\n              <Button type=\"primary\" onClick={this.showModal} style={{marginLeft:10}}>\n                创建\n              </Button>\n              <CollectionCreateForm\n                wrappedComponentRef={this.saveFormRef}\n                visible={this.state.visible}\n                onCancel={this.handleCancel}\n                onCreate={this.handleCreate}\n              />\n              <EditableContext.Provider value={this.props.form}>\n                <Table\n                  components={components}\n                  bordered\n                  dataSource={data}\n                  loading = {this.state.loading}\n                  columns={columns}\n                  rowClassName=\"editable-row\"\n                  pagination={{\n                  onChange: this.cancel,\n                  }}\n                  rowKey={(data)=>data.key}\n                />\n              </EditableContext.Provider>\n            </div>\n          : <Spin style={{marginLeft:'900px',marginTop:'200px'}} tip=\"加载中...\" size='large'/>\n        }\n      </div>\n      \n    );\n  }\n}\n\nconst EditableFormTable = Form.create()(EditableTable);\n\nclass Mytable extends Component{ \n    render(){\n        return <EditableFormTable />\n    }\n}\n\n\n\nexport default Mytable;"]},"metadata":{},"sourceType":"module"}