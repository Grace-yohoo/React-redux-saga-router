{"ast":null,"code":"import _defineProperty from \"/home/grace/test/redux+saga+reactdom/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/home/grace/test/redux+saga+reactdom/src/Components/Table/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Table, Input, InputNumber, Popconfirm, Form, Spin, Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport Myinput from '../Input/Input';\nimport addbutton from './addbutton';\nimport EditableCell from './EditableCell';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nconst EditableContext = React.createContext(); //映射状态\n\nconst mapStateToProps = state => {\n  return {\n    tablelistReducer: state.tablelistReducer\n  };\n}; //注入props\n\n\nlet EditableTable = (_dec = connect(mapStateToProps), _dec(_class = (_temp = class EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.isEditing = record => record.key === this.state.editingKey;\n\n    this.handleDelete = key => {\n      this.setState({\n        loading: true\n      });\n      this.props.dispatch({\n        type: 'del',\n        key\n      });\n      setTimeout(() => {\n        this.setState({\n          loading: false\n        });\n      }, 500);\n    };\n\n    this.cancel = props => {\n      this.setState({\n        editingKey: ''\n      });\n    };\n\n    this.save = (form, key) => {\n      form.validateFields((error, row) => {\n        if (error) {\n          return;\n        } // const newData = [...this.data];\n\n\n        const newData = this.props.tablelistReducer.data;\n        const index = newData.findIndex(item => key === item.key);\n\n        if (index > -1) {\n          const item = newData[index];\n          newData.splice(index, 1, _objectSpread({}, item, {}, row));\n          row.key = key;\n          this.setState({\n            loading: true\n          });\n          this.setState({\n            editingKey: ''\n          });\n          setTimeout(() => {\n            this.props.dispatch({\n              type: 'sav',\n              row\n            });\n            this.setState({\n              loading: false\n            });\n          }, 1000);\n        } else {\n          newData.push(row);\n          console.log(row);\n          this.data = newData;\n          this.setState({\n            editingKey: ''\n          });\n        }\n      });\n    };\n\n    this.edit = key => {\n      this.setState({\n        editingKey: key\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleCreate = () => {\n      const form = this.formRef.props.form;\n      const data = this.props.tablelistReducer.data;\n      this.setState({\n        loading: true\n      });\n      form.validateFields((err, values) => {\n        this.setState({\n          visible: false\n        });\n\n        if (err) {\n          this.setState({\n            visible: true\n          });\n          return;\n        }\n\n        form.resetFields();\n        this.props.dispatch({\n          type: 'add',\n          values\n        });\n      });\n      setTimeout(() => {\n        this.setState({\n          loading: false\n        });\n      }, 300);\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.saveFormRef = formRef => {\n      this.formRef = formRef;\n    };\n\n    this.handSearch = value => {\n      this.setState({\n        loading: true\n      });\n      this.props.dispatch({\n        type: 'sear',\n        value\n      });\n      setTimeout(() => {\n        this.setState({\n          loading: false\n        });\n      }, 300);\n    };\n\n    this.handReset = () => {\n      this.setState({\n        loading: true\n      });\n      this.props.dispatch({\n        type: 'feh'\n      });\n      setTimeout(() => {\n        this.setState({\n          loading: false\n        });\n      }, 300);\n    };\n\n    this.componentDidMount = () => {\n      this.props.dispatch({\n        type: 'feh'\n      });\n    };\n\n    this.state = {\n      editingKey: '',\n      visible: false,\n      loading: false\n    };\n    const data = this.props.tablelistReducer.data;\n    this.columns = [{\n      title: '名称',\n      dataIndex: 'name',\n      editable: true\n    }, {\n      title: '类型',\n      dataIndex: 'source',\n      editable: true\n    }, {\n      title: '网址',\n      dataIndex: 'url',\n      render: text => React.createElement(\"a\", {\n        href: text,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"\\u94FE\\u63A5\")\n    }, {\n      title: '创建时间',\n      dataIndex: 'createdAt'\n    }, {\n      title: '内容',\n      width: '25%',\n      dataIndex: 'desc',\n      editable: true\n    }, {\n      title: '修改',\n      dataIndex: 'operation',\n      render: (text, record) => {\n        const editingKey = this.state.editingKey;\n        const editable = this.isEditing(record);\n        return editable ? React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(EditableContext.Consumer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, form => React.createElement(\"a\", {\n          onClick: () => this.save(form, record.key),\n          style: {\n            marginRight: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \"\\u4FDD\\u5B58\")), React.createElement(Popconfirm, {\n          title: \"\\u786E\\u5B9A\\u8981\\u53D6\\u6D88\\u5417?\",\n          onConfirm: () => this.cancel(record.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"\\u53D6\\u6D88\"))) : React.createElement(\"a\", {\n          disabled: editingKey !== '',\n          onClick: () => this.edit(record.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \"\\u4FEE\\u6539\");\n      }\n    }, {\n      title: '删除',\n      dataIndex: 'delete',\n      render: (text, record) => data.length >= 0 ? React.createElement(Popconfirm, {\n        title: \"\\u4F60\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u5417\\uFF1F\",\n        onConfirm: () => this.handleDelete(record.key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"\\u5220\\u9664\")) : null\n    }];\n  } //是否编辑\n\n\n  render() {\n    const components = {\n      body: {\n        cell: EditableCell\n      }\n    };\n    const data = this.props.tablelistReducer.data;\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return _objectSpread({}, col, {\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === 'age' ? 'number' : 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record)\n        })\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, data ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(Myinput, {\n      handSearch: this.handSearch,\n      handReset: this.handReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: addbutton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    })), React.createElement(EditableContext.Provider, {\n      value: this.props.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(Table, {\n      components: components,\n      bordered: true,\n      dataSource: data,\n      loading: this.state.loading,\n      columns: columns,\n      rowClassName: \"editable-row\",\n      pagination: {\n        onChange: this.cancel\n      },\n      rowKey: data => data.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }))) : React.createElement(Spin, {\n      style: {\n        marginLeft: '900px',\n        marginTop: '200px'\n      },\n      tip: \"\\u52A0\\u8F7D\\u4E2D...\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }));\n  }\n\n}, _temp)) || _class);\nconst EditableFormTable = Form.create()(EditableTable);\nexport default EditableFormTable;","map":{"version":3,"sources":["/home/grace/test/redux+saga+reactdom/src/Components/Table/index.js"],"names":["React","Component","Table","Input","InputNumber","Popconfirm","Form","Spin","Button","Myinput","addbutton","EditableCell","connect","Route","Switch","EditableContext","createContext","mapStateToProps","state","tablelistReducer","EditableTable","constructor","props","isEditing","record","key","editingKey","handleDelete","setState","loading","dispatch","type","setTimeout","cancel","save","form","validateFields","error","row","newData","data","index","findIndex","item","splice","push","console","log","edit","handleCancel","visible","handleCreate","formRef","err","values","resetFields","showModal","saveFormRef","handSearch","value","handReset","componentDidMount","columns","title","dataIndex","editable","render","text","width","marginRight","length","components","body","cell","map","col","onCell","inputType","editing","onChange","marginLeft","marginTop","EditableFormTable","create"],"mappings":"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","sourcesContent":["\nimport React, {Component} from 'react';\nimport { Table, Input, InputNumber, Popconfirm, Form, Spin, Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport Myinput from '../Input/Input'\nimport addbutton from './addbutton'\nimport EditableCell from './EditableCell'\nimport {connect} from 'react-redux';\nimport {\n  Route,\n  Switch,\n} from 'react-router-dom';\n\n\nconst EditableContext = React.createContext();\n\n//映射状态\nconst mapStateToProps = (state) => {\n    return {\n      tablelistReducer : state.tablelistReducer\n    }\n}\n\n\n//注入props\n@connect(mapStateToProps)\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = { \n      editingKey: '',\n      visible: false, \n      loading: false,\n    };\n    \n    const {tablelistReducer:{data}} = this.props;\n\n    this.columns = [\n      {\n        title: '名称',\n        dataIndex: 'name',\n        editable: true,\n      },\n      {\n        title: '类型',\n        dataIndex: 'source',\n        editable: true,\n      },\n      {\n        title: '网址',\n        dataIndex: 'url',\n        render :text => <a href={text} target='_blank'>链接</a>\n        \n      },\n      {\n        title: '创建时间',\n        dataIndex: 'createdAt',\n      },\n      {\n        title: '内容',\n        width: '25%',\n        dataIndex: 'desc',\n        editable: true,\n      },\n      {\n        title: '修改',\n        dataIndex: 'operation',\n        render: (text, record) => {\n          const { editingKey } = this.state;\n          const editable = this.isEditing(record);\n          return editable ? (\n            <span>\n              <EditableContext.Consumer>\n                {form => (\n                  <a\n                    onClick={() => this.save(form, record.key)}\n                    style={{ marginRight: 8 }}\n                  >\n                    保存\n                  </a>\n                )}\n              </EditableContext.Consumer>\n              <Popconfirm title=\"确定要取消吗?\" onConfirm={() => this.cancel(record.key)}>\n                <a>取消</a>\n              </Popconfirm>\n            </span>\n          ) : (\n            <a disabled={editingKey !== ''} onClick={() => this.edit(record.key)}>\n              修改\n            </a>\n          );\n        },\n      },\n      {\n        title: '删除',\n        dataIndex: 'delete',\n        render: (text, record) =>\n          data.length >= 0 ? (\n            <Popconfirm title=\"你确定要删除吗？\" onConfirm={() => this.handleDelete(record.key)}>\n              <a>删除</a>\n            </Popconfirm>\n          ) : null,\n      },\n    ]\n\n  }\n  \n  //是否编辑\n  isEditing = record => record.key === this.state.editingKey;\n  \n  //删除\n  handleDelete = key => {\n     this.setState({loading:true})\n     this.props.dispatch({type:'del',key})\n     setTimeout(()=> {\n      this.setState({loading:false})\n\n     },500)\n\n  };\n\n  //取消修改\n  cancel = (props) => {\n    this.setState({ editingKey: '' });\n  };\n  \n  //修改方法\n  save = (form, key) =>{\n    form.validateFields((error, row) => {\n      if (error) {\n        return ;\n      } \n      // const newData = [...this.data];\n      const newData = this.props.tablelistReducer.data\n      const index = newData.findIndex(item => key === item.key);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, {\n          ...item,\n          ...row,\n        });\n        row.key = key\n        this.setState({ loading: true }) \n        this.setState({ editingKey: '' }) \n        setTimeout(() => {\n            this.props.dispatch({type:'sav',row})  \n            this.setState({ loading: false }) \n        }, 1000);\n        \n\n      } else {\n        newData.push(row);\n        console.log(row)\n        this.data = newData\n        this.setState({ editingKey: '' }) \n      }\n    });\n    \n  }\n\n  //编辑\n  edit = (key) => {\n    this.setState({ editingKey: key });\n  }\n\n  //添加方法\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  //新增\n  handleCreate = () => {\n    const { form } = this.formRef.props;\n    const {tablelistReducer:{data}} = this.props\n    this.setState({loading:true})\n   \n    form.validateFields((err, values) => {\n      this.setState({visible: false });\n      if (err) {\n        this.setState({visible: true });\n        return ;\n      }\n      form.resetFields();\n\n      this.props.dispatch({type:'add',values})\n     \n    });\n    setTimeout(()=> {\n      this.setState({loading:false})\n     },300)\n   \n  };\n\n  //显示模态框\n  showModal = () => {\n    this.setState({ visible: true });\n  };\n  \n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  //搜索方法\n  handSearch = (value) =>{\n    this.setState({loading:true})\n    this.props.dispatch({type:'sear',value})\n    setTimeout(()=> {\n      this.setState({loading:false})\n     },300)\n  }\n\n  //重置方法\n  handReset = ()=>{\n    this.setState({loading:true})\n    this.props.dispatch({type:'feh'}) \n    setTimeout(()=> {\n      this.setState({loading:false})\n     },300)\n  }\n\n  //生命周期  加载后\n  componentDidMount= () =>{\n    this.props.dispatch({type:'feh'})\n    \n  }\n\n  render() {\n    const components = {\n      body: {\n        cell: EditableCell,\n      },\n    };\n    const {tablelistReducer:{data}} = this.props;\n\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === 'age' ? 'number' : 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record),\n        }),\n      };\n    });\n\n    return (\n      <div>\n        { data\n          ?<div>\n\n              <Myinput handSearch={this.handSearch} handReset={this.handReset}></Myinput>\n              <Switch>\n                  <Route exact path=\"/\" component = {addbutton}/>           \n              </Switch>\n              <EditableContext.Provider value={this.props.form}>\n                            <Table\n                              components={components}\n                              bordered\n                              dataSource={data}\n                              loading = {this.state.loading}\n                              columns={columns}\n                              rowClassName=\"editable-row\"\n                              pagination={{\n                              onChange: this.cancel,\n                              }}\n                              rowKey={(data)=>data.key}\n                            />\n              </EditableContext.Provider>                          \n                \n            </div>\n          : <Spin style={{marginLeft:'900px',marginTop:'200px'}} tip=\"加载中...\" size='large'/>\n        }\n\n\n      </div>\n      \n    );\n  }\n}      \n\n\n\nconst EditableFormTable = Form.create()(EditableTable);\n\n\n\nexport default EditableFormTable;\n"]},"metadata":{},"sourceType":"module"}