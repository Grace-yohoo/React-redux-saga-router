{"ast":null,"code":"import _defineProperty from \"/home/grace/test/redux+saga+reactdom/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/home/grace/test/redux+saga+reactdom/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/grace/test/redux+saga+reactdom/src/Components/Table/index.js\",\n    _dec,\n    _class,\n    _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Table, Input, InputNumber, Popconfirm, Form, Spin, Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport Myinput from '../Input/Input';\nimport addbutton from './addbutton';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nconst EditableContext = React.createContext(); //修改类\n\nclass EditableCell extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getInput = () => {\n      if (this.props.inputType === 'number') {\n        return React.createElement(InputNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    };\n\n    this.renderCell = ({\n      getFieldDecorator\n    }) => {\n      const _this$props = this.props,\n            editing = _this$props.editing,\n            dataIndex = _this$props.dataIndex,\n            title = _this$props.title,\n            inputType = _this$props.inputType,\n            record = _this$props.record,\n            index = _this$props.index,\n            children = _this$props.children,\n            restProps = _objectWithoutProperties(_this$props, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n      return React.createElement(\"td\", Object.assign({}, restProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), editing ? React.createElement(Form.Item, {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, getFieldDecorator(dataIndex, {\n        rules: [{\n          required: true,\n          message: \"Please Input \".concat(title, \"!\")\n        }],\n        initialValue: record[dataIndex]\n      })(this.getInput())) : children);\n    };\n  }\n\n  render() {\n    return React.createElement(EditableContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.renderCell);\n  }\n\n} //映射状态\n\n\nconst mapStateToProps = state => {\n  return {\n    tablelistReducer: state.tablelistReducer\n  };\n}; //注入props\n\n\nlet EditableTable = (_dec = connect(mapStateToProps), _dec(_class = (_temp = class EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.isEditing = record => record.key === this.state.editingKey;\n\n    this.handleDelete = key => {\n      this.setState({\n        loading: true\n      });\n      this.props.dispatch({\n        type: 'del',\n        data: key\n      });\n      setTimeout(() => {\n        this.setState({\n          loading: false\n        });\n      }, 500);\n    };\n\n    this.cancel = props => {\n      this.setState({\n        editingKey: ''\n      });\n    };\n\n    this.save = (form, key) => {\n      form.validateFields((error, row) => {\n        if (error) {\n          return;\n        } // const newData = [...this.data];\n\n\n        const newData = this.props.tablelistReducer.data;\n        const index = newData.findIndex(item => key === item.key);\n\n        if (index > -1) {\n          const item = newData[index];\n          newData.splice(index, 1, _objectSpread({}, item, {}, row));\n          row.key = key;\n          this.setState({\n            loading: true\n          });\n          this.setState({\n            editingKey: ''\n          });\n          setTimeout(() => {\n            this.props.dispatch({\n              type: 'sav',\n              data: row\n            });\n            this.setState({\n              loading: false\n            });\n          }, 1000);\n        } else {\n          newData.push(row);\n          console.log(row);\n          this.data = newData;\n          this.setState({\n            editingKey: ''\n          });\n        }\n      });\n    };\n\n    this.edit = key => {\n      this.setState({\n        editingKey: key\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleCreate = () => {\n      const form = this.formRef.props.form;\n      const data = this.props.tablelistReducer.data;\n      this.setState({\n        loading: true\n      });\n      form.validateFields((err, values) => {\n        this.setState({\n          visible: false\n        });\n\n        if (err) {\n          this.setState({\n            visible: true\n          });\n          return;\n        }\n\n        form.resetFields();\n        this.props.dispatch({\n          type: 'add',\n          data: values\n        });\n      });\n      setTimeout(() => {\n        this.setState({\n          loading: false\n        });\n      }, 300);\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.saveFormRef = formRef => {\n      this.formRef = formRef;\n    };\n\n    this.handSearch = value => {\n      this.setState({\n        loading: true\n      });\n      this.props.dispatch({\n        type: 'sear',\n        data: value\n      });\n      setTimeout(() => {\n        this.setState({\n          loading: false\n        });\n      }, 300);\n    };\n\n    this.handReset = () => {\n      this.setState({\n        loading: true\n      });\n      this.props.dispatch({\n        type: 'feh'\n      });\n      setTimeout(() => {\n        this.setState({\n          loading: false\n        });\n      }, 300);\n    };\n\n    this.componentDidMount = () => {\n      this.props.dispatch({\n        type: 'feh'\n      });\n    };\n\n    this.state = {\n      editingKey: '',\n      visible: false,\n      loading: false\n    };\n    const data = this.props.tablelistReducer.data;\n    this.columns = [{\n      title: '名称',\n      dataIndex: 'name',\n      editable: true\n    }, {\n      title: '类型',\n      dataIndex: 'source',\n      editable: true\n    }, {\n      title: '网址',\n      dataIndex: 'url',\n      render: text => React.createElement(\"a\", {\n        href: text,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"\\u94FE\\u63A5\")\n    }, {\n      title: '创建时间',\n      dataIndex: 'createdAt'\n    }, {\n      title: '内容',\n      width: '25%',\n      dataIndex: 'desc',\n      editable: true\n    }, {\n      title: '修改',\n      dataIndex: 'operation',\n      render: (text, record) => {\n        const editingKey = this.state.editingKey;\n        const editable = this.isEditing(record);\n        return editable ? React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(EditableContext.Consumer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, form => React.createElement(\"a\", {\n          onClick: () => this.save(form, record.key),\n          style: {\n            marginRight: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \"\\u4FDD\\u5B58\")), React.createElement(Popconfirm, {\n          title: \"\\u786E\\u5B9A\\u8981\\u53D6\\u6D88\\u5417?\",\n          onConfirm: () => this.cancel(record.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, \"\\u53D6\\u6D88\"))) : React.createElement(\"a\", {\n          disabled: editingKey !== '',\n          onClick: () => this.edit(record.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, \"\\u4FEE\\u6539\");\n      }\n    }, {\n      title: '删除',\n      dataIndex: 'delete',\n      render: (text, record) => data.length >= 0 ? React.createElement(Popconfirm, {\n        title: \"\\u4F60\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u5417\\uFF1F\",\n        onConfirm: () => this.handleDelete(record.key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"\\u5220\\u9664\")) : null\n    }];\n  } //是否编辑\n\n\n  render() {\n    const components = {\n      body: {\n        cell: EditableCell\n      }\n    };\n    const data = this.props.tablelistReducer.data;\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return _objectSpread({}, col, {\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === 'age' ? 'number' : 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record)\n        })\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, data ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(Myinput, {\n      handSearch: this.handSearch,\n      handReset: this.handReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: addbutton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    })), React.createElement(EditableContext.Provider, {\n      value: this.props.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(Table, {\n      components: components,\n      bordered: true,\n      dataSource: data,\n      loading: this.state.loading,\n      columns: columns,\n      rowClassName: \"editable-row\",\n      pagination: {\n        onChange: this.cancel\n      },\n      rowKey: data => data.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }))) : React.createElement(Spin, {\n      style: {\n        marginLeft: '900px',\n        marginTop: '200px'\n      },\n      tip: \"\\u52A0\\u8F7D\\u4E2D...\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }));\n  }\n\n}, _temp)) || _class);\nconst EditableFormTable = Form.create()(EditableTable);\nexport default EditableFormTable;","map":{"version":3,"sources":["/home/grace/test/redux+saga+reactdom/src/Components/Table/index.js"],"names":["React","Component","Table","Input","InputNumber","Popconfirm","Form","Spin","Button","Myinput","addbutton","connect","Route","Switch","EditableContext","createContext","EditableCell","getInput","props","inputType","renderCell","getFieldDecorator","editing","dataIndex","title","record","index","children","restProps","margin","rules","required","message","initialValue","render","mapStateToProps","state","tablelistReducer","EditableTable","constructor","isEditing","key","editingKey","handleDelete","setState","loading","dispatch","type","data","setTimeout","cancel","save","form","validateFields","error","row","newData","findIndex","item","splice","push","console","log","edit","handleCancel","visible","handleCreate","formRef","err","values","resetFields","showModal","saveFormRef","handSearch","value","handReset","componentDidMount","columns","editable","text","width","marginRight","length","components","body","cell","map","col","onCell","onChange","marginLeft","marginTop","EditableFormTable","create"],"mappings":"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","sourcesContent":["\nimport React, {Component} from 'react';\nimport { Table, Input, InputNumber, Popconfirm, Form, Spin, Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport Myinput from '../Input/Input'\nimport addbutton from './addbutton'\nimport {connect} from 'react-redux';\nimport {\n  Route,\n  Switch,\n} from 'react-router-dom';\n\n\n\nconst EditableContext = React.createContext();\n\n//修改类\nclass EditableCell extends React.Component {\n    getInput = () => {\n      if (this.props.inputType === 'number') {\n        return <InputNumber />;\n      }\n      return <Input />;\n    };\n  \n    renderCell = ({ getFieldDecorator }) => {\n      const {\n        editing,\n        dataIndex,\n        title,\n        inputType,\n        record,\n        index,\n        children,\n        ...restProps\n      } = this.props;\n      return (\n        <td {...restProps}>\n          {editing ? (\n            <Form.Item style={{ margin: 0 }}>\n              {getFieldDecorator(dataIndex, {\n                rules: [\n                  {\n                    required: true,\n                    message: `Please Input ${title}!`,\n                  },\n                ],\n                initialValue: record[dataIndex],\n              })(this.getInput())}\n            </Form.Item>\n          ) : (\n            children\n          )}\n        </td>\n      );\n    };\n  \n    render() {\n\n      return <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>;\n    }\n}\n\n//映射状态\nconst mapStateToProps = (state) => {\n    return {\n      tablelistReducer : state.tablelistReducer\n    }\n}\n\n\n//注入props\n@connect(mapStateToProps)\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = { \n      editingKey: '',\n      visible: false, \n      loading: false,\n    };\n    \n    const {tablelistReducer:{data}} = this.props;\n\n    this.columns = [\n      {\n        title: '名称',\n        dataIndex: 'name',\n        editable: true,\n      },\n      {\n        title: '类型',\n        dataIndex: 'source',\n        editable: true,\n      },\n      {\n        title: '网址',\n        dataIndex: 'url',\n        render :text => <a href={text} target='_blank'>链接</a>\n        \n      },\n      {\n        title: '创建时间',\n        dataIndex: 'createdAt',\n      },\n      {\n        title: '内容',\n        width: '25%',\n        dataIndex: 'desc',\n        editable: true,\n      },\n      {\n        title: '修改',\n        dataIndex: 'operation',\n        render: (text, record) => {\n          const { editingKey } = this.state;\n          const editable = this.isEditing(record);\n          return editable ? (\n            <span>\n              <EditableContext.Consumer>\n                {form => (\n                  <a\n                    onClick={() => this.save(form, record.key)}\n                    style={{ marginRight: 8 }}\n                  >\n                    保存\n                  </a>\n                )}\n              </EditableContext.Consumer>\n              <Popconfirm title=\"确定要取消吗?\" onConfirm={() => this.cancel(record.key)}>\n                <a>取消</a>\n              </Popconfirm>\n            </span>\n          ) : (\n            <a disabled={editingKey !== ''} onClick={() => this.edit(record.key)}>\n              修改\n            </a>\n          );\n        },\n      },\n      {\n        title: '删除',\n        dataIndex: 'delete',\n        render: (text, record) =>\n          data.length >= 0 ? (\n            <Popconfirm title=\"你确定要删除吗？\" onConfirm={() => this.handleDelete(record.key)}>\n              <a>删除</a>\n            </Popconfirm>\n          ) : null,\n      },\n    ]\n\n  }\n  \n  //是否编辑\n  isEditing = record => record.key === this.state.editingKey;\n  \n  //删除\n  handleDelete = key => {\n     this.setState({loading:true})\n     this.props.dispatch({type:'del',data:key})\n     setTimeout(()=> {\n      this.setState({loading:false})\n\n     },500)\n\n  };\n\n  //取消修改\n  cancel = (props) => {\n    this.setState({ editingKey: '' });\n  };\n  \n  //修改方法\n  save = (form, key) =>{\n    form.validateFields((error, row) => {\n      if (error) {\n        return ;\n      } \n      // const newData = [...this.data];\n      const newData = this.props.tablelistReducer.data\n      const index = newData.findIndex(item => key === item.key);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, {\n          ...item,\n          ...row,\n        });\n        row.key = key\n        this.setState({ loading: true }) \n        this.setState({ editingKey: '' }) \n        setTimeout(() => {\n            this.props.dispatch({type:'sav',data:row})  \n            this.setState({ loading: false }) \n        }, 1000);\n        \n\n      } else {\n        newData.push(row);\n        console.log(row)\n        this.data = newData\n        this.setState({ editingKey: '' }) \n      }\n    });\n    \n  }\n\n  //编辑\n  edit = (key) => {\n    this.setState({ editingKey: key });\n  }\n\n  //添加方法\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  //新增\n  handleCreate = () => {\n    const { form } = this.formRef.props;\n    const {tablelistReducer:{data}} = this.props\n    this.setState({loading:true})\n   \n    form.validateFields((err, values) => {\n      this.setState({visible: false });\n      if (err) {\n        this.setState({visible: true });\n        return ;\n      }\n      form.resetFields();\n\n      this.props.dispatch({type:'add',data:values})\n     \n    });\n    setTimeout(()=> {\n      this.setState({loading:false})\n     },300)\n   \n  };\n\n  //显示模态框\n  showModal = () => {\n    this.setState({ visible: true });\n  };\n  \n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  //搜索方法\n  handSearch = (value) =>{\n    this.setState({loading:true})\n    this.props.dispatch({type:'sear',data:value})\n    setTimeout(()=> {\n      this.setState({loading:false})\n     },300)\n  }\n\n  //重置方法\n  handReset = ()=>{\n    this.setState({loading:true})\n    this.props.dispatch({type:'feh'}) \n    setTimeout(()=> {\n      this.setState({loading:false})\n     },300)\n  }\n\n  //生命周期  加载后\n  componentDidMount= () =>{\n    this.props.dispatch({type:'feh'})\n    \n  }\n\n  render() {\n    const components = {\n      body: {\n        cell: EditableCell,\n      },\n    };\n    const {tablelistReducer:{data}} = this.props;\n\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === 'age' ? 'number' : 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record),\n        }),\n      };\n    });\n\n    return (\n      <div>\n        { data\n          ?<div>\n\n              <Myinput handSearch={this.handSearch} handReset={this.handReset}></Myinput>\n              <Switch>\n                  <Route exact path=\"/\" component = {addbutton}/>           \n              </Switch>\n              <EditableContext.Provider value={this.props.form}>\n                            <Table\n                              components={components}\n                              bordered\n                              dataSource={data}\n                              loading = {this.state.loading}\n                              columns={columns}\n                              rowClassName=\"editable-row\"\n                              pagination={{\n                              onChange: this.cancel,\n                              }}\n                              rowKey={(data)=>data.key}\n                            />\n              </EditableContext.Provider>                          \n                \n            </div>\n          : <Spin style={{marginLeft:'900px',marginTop:'200px'}} tip=\"加载中...\" size='large'/>\n        }\n\n\n      </div>\n      \n    );\n  }\n}      \n\n\n\nconst EditableFormTable = Form.create()(EditableTable);\n\n\n\nexport default EditableFormTable;\n"]},"metadata":{},"sourceType":"module"}