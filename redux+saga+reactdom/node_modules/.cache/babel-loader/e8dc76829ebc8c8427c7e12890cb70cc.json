{"ast":null,"code":"import { put, takeEvery } from 'redux-saga/effects';\nimport { fetcha, fetchb, fetchc, change } from '../Request/request'; //put 与actiontype相同\n//Mysql 请求数据 (初始渲染  重置)\n\nfunction* fetchUser() {\n  const response = yield fetchb('http://localhost:8080/');\n\n  for (let k in response) {\n    response[k].key = response[k].id;\n  }\n\n  yield put({\n    type: \"fetch\",\n    payload: response\n  });\n} //MYSQL 删除\n\n\nfunction* mysqlDelFectch(key) {\n  const id = yield key.key;\n  console.log(id);\n  yield fetcha('http://localhost:8080/delete', id); //重新请求数据\n\n  const response = yield fetchb('http://localhost:8080/');\n\n  for (let k in response) {\n    response[k].key = response[k].id;\n  }\n\n  yield put({\n    type: \"delete\",\n    payload: response\n  });\n} //MYSQL 添加\n\n\nfunction* mysqlAddFectch(val) {\n  const data1 = yield val.data;\n  yield fetcha('http://localhost:8080/add', data1);\n  const response = yield fetchb('http://localhost:8080/');\n  const data = yield response;\n  yield put({\n    type: 'create',\n    payload: data\n  });\n} //MYSQL 搜索\n\n\nfunction* mysqlSearchFectch(data1) {\n  const name = yield data1.value;\n  const response = yield fetchc('http://localhost:8080/search', name);\n  const data = yield response;\n  yield put({\n    type: 'search',\n    payload: data\n  });\n} //MYSQL 修改\n\n\nfunction* mysqlSaveFectch(val) {\n  const data1 = yield val.row;\n  yield fetcha('http://localhost:8080/change', data1); //重新请求数据\n\n  const response = yield fetchb('http://localhost:8080/');\n  const data = yield response;\n  yield put({\n    type: 'save',\n    payload: data\n  });\n} //监听与组件type相同\n\n\nfunction* mySaga() {\n  yield takeEvery(\"feh\", fetchUser);\n  yield takeEvery('del', mysqlDelFectch);\n  yield takeEvery('add', mysqlAddFectch);\n  yield takeEvery('sear', mysqlSearchFectch);\n  yield takeEvery('sav', mysqlSaveFectch);\n}\n\nexport default mySaga;","map":{"version":3,"sources":["/home/grace/test/redux+saga+reactdom/src/saga/index.js"],"names":["put","takeEvery","fetcha","fetchb","fetchc","change","fetchUser","response","k","key","id","type","payload","mysqlDelFectch","console","log","mysqlAddFectch","val","data1","data","mysqlSearchFectch","name","value","mysqlSaveFectch","row","mySaga"],"mappings":"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","sourcesContent":["import { put, takeEvery } from 'redux-saga/effects';\nimport { fetcha, fetchb,fetchc,change} from '../Request/request'\n\n\n\n//put 与actiontype相同\n//Mysql 请求数据 (初始渲染  重置)\nfunction* fetchUser() {\n       const response = yield fetchb('http://localhost:8080/')\n\n       for (let k in response){\n        response[k].key = response[k].id\n       }\n      \n       yield put({type: \"fetch\", payload:response});\n    \n}\n\n\n//MYSQL 删除\nfunction* mysqlDelFectch(key){\n  const id = yield key.key\n  console.log(id)\n\n  yield fetcha('http://localhost:8080/delete',id)\n\n  //重新请求数据\n  const response = yield fetchb('http://localhost:8080/')\n\n  for (let k in response){\n    response[k].key = response[k].id\n  }\n\n  yield put({type: \"delete\", payload:response});\n}\n\n//MYSQL 添加\nfunction* mysqlAddFectch(val){\n\n      const data1 = yield val.data\n      \n      yield fetcha('http://localhost:8080/add',data1)\n\n      const response = yield fetchb('http://localhost:8080/')\n\n      const data = yield(response)\n\n      yield put ({type:'create' ,payload:data})\n\n}\n\n//MYSQL 搜索\nfunction* mysqlSearchFectch(data1){\n\n      const name = yield data1.value\n\n      const response = yield fetchc('http://localhost:8080/search',name)\n\n      const data = yield(response)\n\n      yield put ({type:'search' ,payload:data})\n\n}\n\n//MYSQL 修改\nfunction* mysqlSaveFectch(val){\n  const data1 = yield val.row\n\n  yield fetcha('http://localhost:8080/change',data1)\n  \n  //重新请求数据\n  const response = yield fetchb('http://localhost:8080/')\n\n  const data = yield(response)\n\n  yield put({type:'save',payload:data})\n\n}\n\n\n//监听与组件type相同\n function* mySaga() {\n   yield takeEvery(\"feh\", fetchUser);\n   yield takeEvery('del', mysqlDelFectch)\n   yield takeEvery('add', mysqlAddFectch)\n   yield takeEvery('sear', mysqlSearchFectch)\n   yield takeEvery('sav', mysqlSaveFectch)\n\n }\n\n \n export default mySaga;\n\n"]},"metadata":{},"sourceType":"module"}