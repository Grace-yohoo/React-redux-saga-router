{"ast":null,"code":"//请求方法\n// export const fetcha = (url,data) => {\n//     fetch(url,{\n//       method: 'POST', \n//       body: JSON.stringify(data),\n//       headers: new Headers({\n//         'Content-Type': 'application/x-www-form-urlencoded'\n//       })\n//     })\n//     .then(res => res.json())\n// }\n//初始fetch方法\nexport const fetchb = function* (url) {\n  const res = yield fetch(url);\n  const data = yield res.json();\n  return data;\n}; //搜索条件匹配fetch方法\n\nexport const fetchc = function* (url, data) {\n  const res = yield fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: new Headers({\n      'Content-Type': 'application/x-www-form-urlencoded'\n    })\n  });\n  const data1 = yield res.json();\n  return data1;\n}; //添加key\n\nexport const change = function (response) {\n  for (let k in response) {\n    response[k].key = response[k].id;\n  }\n\n  return response;\n}; //fetch数据后 添加key\n\nexport const fetch1 = function* () {\n  const response = yield fetchb('http://localhost:8080/');\n  const data = yield change(response);\n  return data;\n}; //mysql搜索\n// export const datamql3 = function* (val){\n//   const data1 = yield val.data\n//   const fedata = yield val.data2\n//   const response = yield fetchc(`http://localhost:8080/${fedata}`,data1)\n//   const data2 = yield change(response)\n//   return data2\n// }\n//Model 页面\n\nexport const model = {\n  localhost: \"http://localhost:8080/\",\n  change: function* (fedata, data1) {\n    yield fetchc(this.localhost + fedata, data1);\n    const data2 = yield fetch1();\n    return data2;\n  },\n  fetch1: function* () {\n    const response = yield fetchb('http://localhost:8080/');\n    const data = yield change(response);\n    return data;\n  },\n  datamql3: function* (val) {\n    const data1 = yield val.data;\n    const fedata = yield val.data2;\n    const response = yield fetchc(\"http://localhost:8080/\".concat(fedata), data1);\n    const data2 = yield change(response);\n    return data2;\n  }\n};","map":{"version":3,"sources":["/home/grace/test/redux+saga+reactdom/src/Request/request.js"],"names":["fetchb","url","res","fetch","data","json","fetchc","method","body","JSON","stringify","headers","Headers","data1","change","response","k","key","id","fetch1","model","localhost","fedata","data2","datamql3","val"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAO,MAAMA,MAAM,GAAI,WAAWC,GAAX,EAAe;AACpC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;AAEA,QAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,SAAOD,IAAP;AAED,CAPM,C,CASP;;AACA,OAAO,MAAME,MAAM,GAAI,WAAWL,GAAX,EAAeG,IAAf,EAAoB;AACzC,QAAMF,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAK;AACxBM,IAAAA,MAAM,EAAE,MADgB;AAExBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAFkB;AAGxBO,IAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,sBAAgB;AADG,KAAZ;AAHe,GAAL,CAAvB;AAOA,QAAMC,KAAK,GAAG,MAAMX,GAAG,CAACG,IAAJ,EAApB;AAEA,SAAOQ,KAAP;AAED,CAZM,C,CAcP;;AACA,OAAO,MAAMC,MAAM,GAAG,UAASC,QAAT,EAAmB;AAEvC,OAAK,IAAIC,CAAT,IAAcD,QAAd,EAAuB;AACvBA,IAAAA,QAAQ,CAACC,CAAD,CAAR,CAAYC,GAAZ,GAAkBF,QAAQ,CAACC,CAAD,CAAR,CAAYE,EAA9B;AACC;;AACD,SAAOH,QAAP;AAED,CAPM,C,CASP;;AACA,OAAO,MAAMI,MAAM,GAAG,aAAY;AAEhC,QAAMJ,QAAQ,GAAG,MAAMf,MAAM,CAAC,wBAAD,CAA7B;AAEA,QAAMI,IAAI,GAAG,MAAMU,MAAM,CAACC,QAAD,CAAzB;AAEA,SAAOX,IAAP;AAED,CARM,C,CAUP;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAIA;;AACA,OAAO,MAAMgB,KAAK,GAAG;AAEjBC,EAAAA,SAAS,EAAG,wBAFK;AAIjBP,EAAAA,MAAM,EAAC,WAAWQ,MAAX,EAAkBT,KAAlB,EAAwB;AAE7B,UAAMP,MAAM,CAAC,KAAKe,SAAL,GAAeC,MAAhB,EAAuBT,KAAvB,CAAZ;AAEA,UAAMU,KAAK,GAAG,MAAMJ,MAAM,EAA1B;AAEA,WAAOI,KAAP;AACD,GAXgB;AAajBJ,EAAAA,MAAM,EAAC,aAAY;AAEjB,UAAMJ,QAAQ,GAAG,MAAMf,MAAM,CAAC,wBAAD,CAA7B;AAEA,UAAMI,IAAI,GAAG,MAAMU,MAAM,CAACC,QAAD,CAAzB;AAEA,WAAOX,IAAP;AACD,GApBgB;AAsBjBoB,EAAAA,QAAQ,EAAE,WAAWC,GAAX,EAAe;AACvB,UAAMZ,KAAK,GAAG,MAAMY,GAAG,CAACrB,IAAxB;AAEA,UAAMkB,MAAM,GAAG,MAAMG,GAAG,CAACF,KAAzB;AAEA,UAAMR,QAAQ,GAAG,MAAMT,MAAM,iCAA0BgB,MAA1B,GAAmCT,KAAnC,CAA7B;AAEA,UAAMU,KAAK,GAAG,MAAMT,MAAM,CAACC,QAAD,CAA1B;AAEA,WAAOQ,KAAP;AACD;AAhCgB,CAAd","sourcesContent":["\n//请求方法\n// export const fetcha = (url,data) => {\n//     fetch(url,{\n//       method: 'POST', \n//       body: JSON.stringify(data),\n//       headers: new Headers({\n//         'Content-Type': 'application/x-www-form-urlencoded'\n//       })\n//     })\n//     .then(res => res.json())\n// }\n\n//初始fetch方法\nexport const fetchb =  function* (url){\n  const res = yield fetch(url)\n\n  const data = yield res.json()\n\n  return data\n\n}\n\n//搜索条件匹配fetch方法\nexport const fetchc =  function* (url,data){\n  const res = yield fetch(url,{\n      method: 'POST', \n      body: JSON.stringify(data),\n      headers: new Headers({\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n  })\n  const data1 = yield res.json()\n\n  return data1\n\n}\n\n//添加key\nexport const change = function(response) {\n\n  for (let k in response){\n  response[k].key = response[k].id\n  }\n  return response\n\n}\n\n//fetch数据后 添加key\nexport const fetch1 = function* (){\n\n  const response = yield fetchb('http://localhost:8080/')\n\n  const data = yield change(response)\n  \n  return data\n\n}\n\n//mysql搜索\n// export const datamql3 = function* (val){\n//   const data1 = yield val.data\n\n//   const fedata = yield val.data2\n\n//   const response = yield fetchc(`http://localhost:8080/${fedata}`,data1)\n\n//   const data2 = yield change(response)\n\n//   return data2\n// }\n\n\n\n//Model 页面\nexport const model = {\n\n    localhost : \"http://localhost:8080/\",\n\n    change:function* (fedata,data1){\n    \n      yield fetchc(this.localhost+fedata,data1)\n    \n      const data2 = yield fetch1()\n    \n      return data2\n    },\n\n    fetch1:function* (){\n\n      const response = yield fetchb('http://localhost:8080/')\n    \n      const data = yield change(response)\n      \n      return data   \n    },\n\n    datamql3 :function* (val){\n      const data1 = yield val.data\n    \n      const fedata = yield val.data2\n    \n      const response = yield fetchc(`http://localhost:8080/${fedata}`,data1)\n    \n      const data2 = yield change(response)\n    \n      return data2\n    }\n}\n"]},"metadata":{},"sourceType":"module"}