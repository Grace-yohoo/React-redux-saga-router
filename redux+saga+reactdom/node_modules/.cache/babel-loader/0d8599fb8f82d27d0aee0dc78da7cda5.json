{"ast":null,"code":"import _defineProperty from \"/home/grace/test/redux/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH, DELETE, CREATE, SEARCH, RESET, SAVE } from '../ActionTypes/tablelist';\nimport { action } from 'mobx';\nexport const createFetchAction = () => {\n  return {\n    type: FETCH,\n    payload: action.payload\n  };\n};\nexport const createDeleteAction = data => {\n  for (let k in data) {\n    data[k].key = data[k].createdAt;\n  }\n\n  return {\n    type: DELETE,\n    payload: data\n  };\n};\nexport const CreateAddaction = () => {\n  return {\n    type: CREATE,\n    payload: action.payload\n  };\n};\nexport const CreateSearchaction = () => {\n  return {\n    type: SEARCH,\n    payload: action.payload\n  };\n};\nexport const CreateResetAction = () => {\n  return {\n    type: RESET\n  };\n};\nexport const CreateSaveAction = (form, key, newData) => {\n  form.validateFields((error, row) => {\n    if (error) {\n      return;\n    }\n\n    const index = newData.findIndex(item => key === item.key);\n\n    if (index > -1) {\n      const item = newData[index];\n      newData.splice(index, 1, _objectSpread({}, item, {}, row));\n    } else {\n      newData.push(row);\n    }\n  });\n  return {\n    type: SAVE,\n    payload: newData\n  };\n};","map":{"version":3,"sources":["/home/grace/test/redux/src/Actions/tablelist.js"],"names":["FETCH","DELETE","CREATE","SEARCH","RESET","SAVE","action","createFetchAction","type","payload","createDeleteAction","data","k","key","createdAt","CreateAddaction","CreateSearchaction","CreateResetAction","CreateSaveAction","form","newData","validateFields","error","row","index","findIndex","item","splice","push"],"mappings":";;;;;;AAAA,SAAQA,KAAR,EAAcC,MAAd,EAAqBC,MAArB,EAA4BC,MAA5B,EAAmCC,KAAnC,EAA0CC,IAA1C,QAAqD,0BAArD;AACA,SAASC,MAAT,QAAuB,MAAvB;AAGA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AAEnC,SAAO;AACHC,IAAAA,IAAI,EAAGR,KADJ;AAEHS,IAAAA,OAAO,EAAEH,MAAM,CAACG;AAFb,GAAP;AAIH,CANM;AAQP,OAAO,MAAMC,kBAAkB,GAAGC,IAAI,IAAI;AAClC,OAAK,IAAIC,CAAT,IAAcD,IAAd,EAAmB;AACjBA,IAAAA,IAAI,CAACC,CAAD,CAAJ,CAAQC,GAAR,GAAcF,IAAI,CAACC,CAAD,CAAJ,CAAQE,SAAtB;AACD;;AACD,SAAM;AACFN,IAAAA,IAAI,EAAEP,MADJ;AAEFQ,IAAAA,OAAO,EAAGE;AAFR,GAAN;AAIP,CARM;AAUP,OAAO,MAAMI,eAAe,GAAG,MAAM;AAC7B,SAAO;AACHP,IAAAA,IAAI,EAAEN,MADH;AAEHO,IAAAA,OAAO,EAAEH,MAAM,CAACG;AAFb,GAAP;AAIP,CALM;AAOP,OAAO,MAAMO,kBAAkB,GAAG,MAAM;AAChC,SAAO;AACLR,IAAAA,IAAI,EAACL,MADA;AAELM,IAAAA,OAAO,EAACH,MAAM,CAACG;AAFV,GAAP;AAIP,CALM;AAOP,OAAO,MAAMQ,iBAAiB,GAAG,MAAM;AACjC,SAAO;AACLT,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGL,CAJM;AAMP,OAAO,MAAMc,gBAAgB,GAAG,CAACC,IAAD,EAAMN,GAAN,EAAUO,OAAV,KAAsB;AAChDD,EAAAA,IAAI,CAACE,cAAL,CAAoB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAClC,QAAID,KAAJ,EAAW;AACT;AACD;;AACD,UAAME,KAAK,GAAGJ,OAAO,CAACK,SAAR,CAAkBC,IAAI,IAAIb,GAAG,KAAKa,IAAI,CAACb,GAAvC,CAAd;;AACA,QAAIW,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,YAAME,IAAI,GAAGN,OAAO,CAACI,KAAD,CAApB;AACAJ,MAAAA,OAAO,CAACO,MAAR,CAAeH,KAAf,EAAsB,CAAtB,oBACKE,IADL,MAEKH,GAFL;AAID,KAND,MAMO;AACLH,MAAAA,OAAO,CAACQ,IAAR,CAAaL,GAAb;AACD;AACF,GAdD;AAeA,SAAO;AACLf,IAAAA,IAAI,EAAEH,IADD;AAELI,IAAAA,OAAO,EAAEW;AAFJ,GAAP;AAKL,CArBM","sourcesContent":["import {FETCH,DELETE,CREATE,SEARCH,RESET, SAVE} from '../ActionTypes/tablelist';\nimport { action } from 'mobx';\n\n\nexport const createFetchAction = () => {\n\n    return {\n        type : FETCH,\n        payload: action.payload\n    }\n}\n\nexport const createDeleteAction = data => {\n        for (let k in data){\n          data[k].key = data[k].createdAt\n        }\n        return{\n            type: DELETE,\n            payload : data\n        }\n}\n\nexport const CreateAddaction = () => {\n        return {\n            type: CREATE,\n            payload: action.payload\n        }\n}\n\nexport const CreateSearchaction = () => {\n        return {\n          type:SEARCH,\n          payload:action.payload\n        }\n}\n\nexport const CreateResetAction = () => {\n      return {\n        type: RESET,\n      }\n}\n\nexport const CreateSaveAction = (form,key,newData) => {\n      form.validateFields((error, row) => {\n        if (error) {\n          return;\n        }\n        const index = newData.findIndex(item => key === item.key);\n        if (index > -1) {\n          const item = newData[index];\n          newData.splice(index, 1, {\n            ...item,\n            ...row,\n          });\n        } else {\n          newData.push(row);\n        }\n      });\n      return {\n        type: SAVE,\n        payload: newData\n      }\n\n}"]},"metadata":{},"sourceType":"module"}