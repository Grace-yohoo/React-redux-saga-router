{"ast":null,"code":"import { put, takeEvery } from 'redux-saga/effects';\nimport { fetcha } from '../Request/request'; //put 与actiontype相同\n//Mysql 请求数据 (初始渲染  重置)\n\nfunction* fetchUser() {\n  const res = yield fetch('http://localhost:8080/');\n  const response = yield res.json();\n\n  for (let k in response) {\n    response[k].key = response[k].createdAt;\n  }\n\n  yield put({\n    type: \"fetch\",\n    payload: response\n  });\n} //MYSQL 删除\n\n\nfunction* mysqlDelFectch(key) {\n  const createdAt = yield key.key;\n  yield fetcha('http://localhost:8080/delete', createdAt); //重新请求数据\n\n  const res = yield fetch('http://localhost:8080/');\n  const response = yield res.json();\n\n  for (let k in response) {\n    response[k].key = response[k].createdAt;\n  }\n\n  yield put({\n    type: \"delete\",\n    payload: response\n  });\n} //MYSQL 添加\n\n\nfunction* mysqlAddFectch(val) {\n  const data = yield val.values;\n  yield fetcha('http://localhost:8080/add', data); //重新请求数据\n\n  const res = yield fetch('http://localhost:8080/');\n  const response = yield res.json();\n\n  for (let k in response) {\n    response[k].key = response[k].createdAt;\n  }\n\n  yield put({\n    type: 'create',\n    payload: response\n  });\n} //MYSQL 搜索\n\n\nfunction* mysqlSearchFectch(data) {\n  const name = yield data.value; // const response = yield fetcha('http://localhost:8080/search',name)\n\n  const res = yield fetch('http://localhost:8080/search', {\n    method: 'POST',\n    // or 'PUT'\n    body: JSON.stringify(name),\n    // data can be `string` or {object}!\n    headers: new Headers({\n      'Content-Type': 'application/x-www-form-urlencoded'\n    })\n  });\n  const response = yield res.json();\n\n  for (let k in response) {\n    response[k].key = response[k].createdAt;\n  }\n\n  yield put({\n    type: 'create',\n    payload: response\n  });\n} //MYSQL 修改\n\n\nfunction* mysqlSaveFectch(val) {\n  const data = yield val.row;\n  yield console.log(data);\n  yield fetcha('http://localhost:8080/change', data); //重新请求数据\n\n  const res = yield fetch('http://localhost:8080/');\n  const response = yield res.json();\n\n  for (let k in response) {\n    response[k].key = response[k].createdAt;\n  }\n\n  yield put({\n    type: 'save',\n    payload: response\n  });\n} //监听与组件type相同\n\n\nfunction* mySaga() {\n  yield takeEvery(\"feh\", fetchUser);\n  yield takeEvery('del', mysqlDelFectch);\n  yield takeEvery('add', mysqlAddFectch);\n  yield takeEvery('sear', mysqlSearchFectch);\n  yield takeEvery('sav', mysqlSaveFectch);\n}\n\nexport default mySaga;","map":{"version":3,"sources":["/home/grace/test/redux+saga+reactdom/src/saga/index.js"],"names":["put","takeEvery","fetcha","fetchUser","res","fetch","response","json","k","key","createdAt","type","payload","mysqlDelFectch","mysqlAddFectch","val","data","values","mysqlSearchFectch","name","value","method","body","JSON","stringify","headers","Headers","mysqlSaveFectch","row","console","log","mySaga"],"mappings":"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","sourcesContent":["\nimport { put, takeEvery } from 'redux-saga/effects';\nimport { fetcha } from '../Request/request'\n\n\n\n\n\n//put 与actiontype相同\n//Mysql 请求数据 (初始渲染  重置)\nfunction* fetchUser() {\n       const res =  yield fetch('http://localhost:8080/')\n\n       const response = yield res.json()\n       for (let k in response){\n        response[k].key = response[k].createdAt\n\n       }\n      \n       yield put({type: \"fetch\", payload:response});\n    \n}\n\n\n//MYSQL 删除\nfunction* mysqlDelFectch(key){\n  const createdAt = yield key.key\n  yield fetcha('http://localhost:8080/delete',createdAt)\n\n  //重新请求数据\n  const res =  yield fetch('http://localhost:8080/')\n\n  const response = yield res.json()\n  for (let k in response){\n        response[k].key = response[k].createdAt\n  }\n\n\n  yield put({type: \"delete\", payload:response});\n}\n\n//MYSQL 添加\nfunction* mysqlAddFectch(val){\n      const data = yield val.values\n      \n      yield fetcha('http://localhost:8080/add',data)\n\n      //重新请求数据\n      const res =  yield fetch('http://localhost:8080/')\n\n      const response = yield res.json()\n      for (let k in response){\n            response[k].key = response[k].createdAt\n            \n      }\n\n\n      yield put ({type:'create' ,payload:response})\n\n}\n\n//MYSQL 搜索\nfunction* mysqlSearchFectch(data){\n      const name = yield data.value\n      // const response = yield fetcha('http://localhost:8080/search',name)\n      const res = yield fetch('http://localhost:8080/search', {\n            method: 'POST', // or 'PUT'\n            body: JSON.stringify(name), // data can be `string` or {object}!\n            headers: new Headers({\n              'Content-Type': 'application/x-www-form-urlencoded'\n            })\n          })\n      const response = yield res.json()\n      for (let k in response){\n        response[k].key = response[k].createdAt\n\n      }\n\n\n      yield put ({type:'create' ,payload:response})\n\n}\n\n//MYSQL 修改\nfunction* mysqlSaveFectch(val){\n  const data = yield val.row\n  yield console.log(data)\n  yield fetcha('http://localhost:8080/change',data)\n  \n  //重新请求数据\n  const res =  yield fetch('http://localhost:8080/')\n\n  const response = yield res.json()\n  for (let k in response){\n        response[k].key = response[k].createdAt\n\n  }\n\n  yield put({type:'save',payload:response})\n\n}\n\n\n//监听与组件type相同\n function* mySaga() {\n   yield takeEvery(\"feh\", fetchUser);\n   yield takeEvery('del', mysqlDelFectch)\n   yield takeEvery('add', mysqlAddFectch)\n   yield takeEvery('sear', mysqlSearchFectch)\n   yield takeEvery('sav', mysqlSaveFectch)\n\n\n }\n\n \n export default mySaga;\n\n"]},"metadata":{},"sourceType":"module"}