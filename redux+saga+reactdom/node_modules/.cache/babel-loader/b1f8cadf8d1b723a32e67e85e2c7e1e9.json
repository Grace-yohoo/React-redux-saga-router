{"ast":null,"code":"import { put, takeEvery } from 'redux-saga/effects';\nimport { fetcha, data } from '../Request/request'; //put 与actiontype相同\n//Mysql 请求数据 (初始渲染  重置)\n\nfunction* fetchUser() {\n  const response = yield data('http://localhost:8080/'); //  const res =  yield fetch('http://localhost:8080/')\n  //  const response = yield res.json()\n\n  for (let k in response) {\n    response[k].key = response[k].id;\n  }\n\n  yield put({\n    type: \"fetch\",\n    payload: response\n  });\n} //MYSQL 删除\n\n\nfunction* mysqlDelFectch(key) {\n  const id = yield key.key;\n  console.log(id);\n  yield fetcha('http://localhost:8080/delete', id); //重新请求数据\n\n  const res = yield fetch('http://localhost:8080/');\n  const response = yield res.json();\n\n  for (let k in response) {\n    response[k].key = response[k].id;\n  }\n\n  yield put({\n    type: \"delete\",\n    payload: response\n  });\n} //MYSQL 添加\n\n\nfunction* mysqlAddFectch(val) {\n  const data1 = yield val.data;\n  yield fetcha('http://localhost:8080/add', data1); //重新请求数据\n\n  const res = yield fetch('http://localhost:8080/');\n  const response = yield res.json();\n\n  for (let k in response) {\n    response[k].key = response[k].id;\n  }\n\n  yield put({\n    type: 'create',\n    payload: response\n  });\n} //MYSQL 搜索\n\n\nfunction* mysqlSearchFectch(data) {\n  const name = yield data.value;\n  const res = yield fetch('http://localhost:8080/search', {\n    method: 'POST',\n    // or 'PUT'\n    body: JSON.stringify(name),\n    // data can be `string` or {object}!\n    headers: new Headers({\n      'Content-Type': 'application/x-www-form-urlencoded'\n    })\n  });\n  const response = yield res.json();\n\n  for (let k in response) {\n    response[k].key = response[k].id;\n  }\n\n  yield put({\n    type: 'create',\n    payload: response\n  });\n} //MYSQL 修改\n\n\nfunction* mysqlSaveFectch(val) {\n  const data = yield val.row;\n  yield console.log(data);\n  yield fetcha('http://localhost:8080/change', data); //重新请求数据\n\n  const res = yield fetch('http://localhost:8080/');\n  const response = yield res.json();\n\n  for (let k in response) {\n    response[k].key = response[k].id;\n  }\n\n  yield put({\n    type: 'save',\n    payload: response\n  });\n} //监听与组件type相同\n\n\nfunction* mySaga() {\n  yield takeEvery(\"feh\", fetchUser);\n  yield takeEvery('del', mysqlDelFectch);\n  yield takeEvery('add', mysqlAddFectch);\n  yield takeEvery('sear', mysqlSearchFectch);\n  yield takeEvery('sav', mysqlSaveFectch);\n}\n\nexport default mySaga;","map":{"version":3,"sources":["/home/grace/test/redux+saga+reactdom/src/saga/index.js"],"names":["put","takeEvery","fetcha","data","fetchUser","response","k","key","id","type","payload","mysqlDelFectch","console","log","res","fetch","json","mysqlAddFectch","val","data1","mysqlSearchFectch","name","value","method","body","JSON","stringify","headers","Headers","mysqlSaveFectch","row","mySaga"],"mappings":"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","sourcesContent":["\nimport { put, takeEvery } from 'redux-saga/effects';\nimport { fetcha, data} from '../Request/request'\n\n\n\n\n\n//put 与actiontype相同\n//Mysql 请求数据 (初始渲染  重置)\nfunction* fetchUser() {\n       const response = yield data('http://localhost:8080/')\n      //  const res =  yield fetch('http://localhost:8080/')\n\n      //  const response = yield res.json()\n       for (let k in response){\n        response[k].key = response[k].id\n       }\n      \n       yield put({type: \"fetch\", payload:response});\n    \n}\n\n\n//MYSQL 删除\nfunction* mysqlDelFectch(key){\n  const id = yield key.key\n  console.log(id)\n  yield fetcha('http://localhost:8080/delete',id)\n\n  //重新请求数据\n  const res =  yield fetch('http://localhost:8080/')\n\n  const response = yield res.json()\n  for (let k in response){\n    response[k].key = response[k].id\n   }\n\n  yield put({type: \"delete\", payload:response});\n}\n\n//MYSQL 添加\nfunction* mysqlAddFectch(val){\n      const data1 = yield val.data\n      \n      yield fetcha('http://localhost:8080/add',data1)\n\n      //重新请求数据\n      const res =  yield fetch('http://localhost:8080/')\n\n      const response = yield res.json()\n\n      for (let k in response){\n        response[k].key = response[k].id\n       }\n\n      yield put ({type:'create' ,payload:response})\n\n}\n\n//MYSQL 搜索\nfunction* mysqlSearchFectch(data){\n      const name = yield data.value\n\n      const res = yield fetch('http://localhost:8080/search', {\n            method: 'POST', // or 'PUT'\n            body: JSON.stringify(name), // data can be `string` or {object}!\n            headers: new Headers({\n              'Content-Type': 'application/x-www-form-urlencoded'\n            })\n          })\n      const response = yield res.json()\n      for (let k in response){\n        response[k].key = response[k].id\n       }\n\n      yield put ({type:'create' ,payload:response})\n\n}\n\n//MYSQL 修改\nfunction* mysqlSaveFectch(val){\n  const data = yield val.row\n  yield console.log(data)\n  yield fetcha('http://localhost:8080/change',data)\n  \n  //重新请求数据\n  const res =  yield fetch('http://localhost:8080/')\n\n  const response = yield res.json()\n\n  for (let k in response){\n    response[k].key = response[k].id\n   }\n\n  yield put({type:'save',payload:response})\n\n}\n\n\n//监听与组件type相同\n function* mySaga() {\n   yield takeEvery(\"feh\", fetchUser);\n   yield takeEvery('del', mysqlDelFectch)\n   yield takeEvery('add', mysqlAddFectch)\n   yield takeEvery('sear', mysqlSearchFectch)\n   yield takeEvery('sav', mysqlSaveFectch)\n\n\n }\n\n \n export default mySaga;\n\n"]},"metadata":{},"sourceType":"module"}