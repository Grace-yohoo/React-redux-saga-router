{"ast":null,"code":"var _jsxFileName = \"/home/grace/test/my-app/src/form.js\";\nimport { Form, Row, Col, Input, Button, Icon } from 'antd';\nimport React from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nclass AdvancedSearchForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      const expand = this.state.expand;\n      this.setState({\n        expand: !expand\n      });\n    };\n\n    this.state = {\n      expand: false\n    };\n  } // To generate mock Form.Item\n  // getFields() {\n  //   const { getFieldDecorator } = this.props.form;\n  //   const children = [];\n  //     children.push(\n  //       <Col span={8} key={1} >\n  //         <Form.Item label={\"Name\"}>\n  //           {getFieldDecorator(\"who\", {\n  //             rules: [\n  //               {\n  //                 required: true,\n  //                 message: 'Input something!',\n  //               },\n  //             ],\n  //           })(<Input placeholder=\"placeholder\" />)}\n  //         </Form.Item>\n  //         <Form.Item label={\"Description\"} key={2} >\n  //           {getFieldDecorator(\"desc\", {\n  //             rules: [\n  //               {\n  //                 message: 'Input something!',\n  //               },\n  //             ],\n  //           })(<Input placeholder=\"placeholder\" />)}\n  //         </Form.Item>\n  //       </Col>,\n  //     );\n  //   return children;\n  // }\n  // handleSearch = e => {\n  //   e.preventDefault();\n  //   this.props.form.validateFields((err, values) => {\n  //     const {data}= this.props\n  //     let arr1 = []\n  //     for (let k in data){\n  //       if (data[k].who == values.who){\n  //         arr1.push({\n  //           createdAt: data[k].createdAt,\n  //           desc: data[k].desc,\n  //           key: data[k].key,\n  //           publishedAt: data[k].publishedAt,\n  //           source: data[k].source,\n  //           type: data[k].type,\n  //           url: data[k].url,\n  //           who: data[k].who,\n  //         })\n  //       }\n  //     }\n  //     this.setState({data:arr1})\n  //   });\n  //  };\n  // handleReset = () => {\n  //   this.props.form.resetFields();\n  // };\n\n\n  render() {\n    const handleSearch = this.props.handleSearch;\n    const handleReset = this.props.handleReset;\n    const getFields = this.props.getFields;\n    return React.createElement(Form, {\n      className: \"ant-advanced-search-form\",\n      onSubmit: handleSearch,\n      style: {\n        margin: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Row, {\n      gutter: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.getFields()), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 24,\n      style: {\n        textAlign: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Search\"), React.createElement(Button, {\n      style: {\n        marginLeft: 8\n      },\n      onClick: handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Clear\"), React.createElement(\"a\", {\n      style: {\n        marginLeft: 8,\n        fontSize: 12\n      },\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Collapse \", React.createElement(Icon, {\n      type: this.state.expand ? 'up' : 'down',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst WrappedAdvancedSearchForm = Form.create({\n  name: 'advanced_search'\n})(AdvancedSearchForm);\n\nclass Myform extends React.Component {\n  render() {\n    const data = this.props.data;\n    const handleSearch = this.props.handleSearch;\n    const handleReset = this.props.handleReset;\n    const getFields = this.props.getFields;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(WrappedAdvancedSearchForm, {\n      data: data,\n      handleSearch: handleSearch,\n      handleReset: handleReset,\n      getFields: this.getFields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Myform;","map":{"version":3,"sources":["/home/grace/test/my-app/src/form.js"],"names":["Form","Row","Col","Input","Button","Icon","React","AdvancedSearchForm","Component","constructor","props","toggle","expand","state","setState","render","handleSearch","handleReset","getFields","margin","textAlign","marginLeft","fontSize","WrappedAdvancedSearchForm","create","name","Myform","data"],"mappings":"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","sourcesContent":["import { Form, Row, Col, Input, Button, Icon } from 'antd';\nimport React from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nclass AdvancedSearchForm extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            expand: false,\n          };\n    }\n\n    // To generate mock Form.Item\n    // getFields() {\n    //   const { getFieldDecorator } = this.props.form;\n    //   const children = [];\n    //     children.push(\n    //       <Col span={8} key={1} >\n    //         <Form.Item label={\"Name\"}>\n    //           {getFieldDecorator(\"who\", {\n    //             rules: [\n    //               {\n    //                 required: true,\n    //                 message: 'Input something!',\n    //               },\n    //             ],\n    //           })(<Input placeholder=\"placeholder\" />)}\n    //         </Form.Item>\n    //         <Form.Item label={\"Description\"} key={2} >\n    //           {getFieldDecorator(\"desc\", {\n    //             rules: [\n    //               {\n    //                 message: 'Input something!',\n    //               },\n    //             ],\n    //           })(<Input placeholder=\"placeholder\" />)}\n    //         </Form.Item>\n    //       </Col>,\n    //     );\n    //   return children;\n    // }\n  \n    // handleSearch = e => {\n    //   e.preventDefault();\n    //   this.props.form.validateFields((err, values) => {\n    //     const {data}= this.props\n    //     let arr1 = []\n    //     for (let k in data){\n    //       if (data[k].who == values.who){\n    //         arr1.push({\n    //           createdAt: data[k].createdAt,\n    //           desc: data[k].desc,\n    //           key: data[k].key,\n    //           publishedAt: data[k].publishedAt,\n    //           source: data[k].source,\n    //           type: data[k].type,\n    //           url: data[k].url,\n    //           who: data[k].who,\n    //         })\n    //       }\n    //     }\n    //     this.setState({data:arr1})\n    //   });\n\n    //  };\n  \n    // handleReset = () => {\n      \n    //   this.props.form.resetFields();\n    // };\n  \n    toggle = () => {\n      const { expand } = this.state;\n      this.setState({ expand: !expand });\n    };\n  \n\n\n    render() {\n      const {handleSearch} = this.props;\n      const {handleReset} = this.props;\n      const {getFields} = this.props;\n      return (\n        <Form className=\"ant-advanced-search-form\" onSubmit={handleSearch} style={{margin:20}}>\n          <Row gutter={24}>{this.getFields()}</Row>\n          <Row>\n            <Col span={24} style={{ textAlign: 'right' }}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Search\n              </Button>\n              <Button style={{ marginLeft: 8 }} onClick={handleReset}>\n                Clear\n              </Button>\n              <a style={{ marginLeft: 8, fontSize: 12 }} onClick={this.toggle}>\n                Collapse <Icon type={this.state.expand ? 'up' : 'down'} />\n              </a>\n            </Col>\n          </Row>\n        </Form>\n      );\n    }\n  }\n\nconst WrappedAdvancedSearchForm = Form.create({ name: 'advanced_search' })(AdvancedSearchForm);\n\nclass Myform extends React.Component {\n\n    render(){\n        const {data}= this.props\n        const {handleSearch} = this.props;\n        const {handleReset} = this.props;\n        const {getFields} = this.props;\n        return(\n         <div>\n            <WrappedAdvancedSearchForm data= {data} handleSearch = {handleSearch} handleReset = {handleReset} getFields = {this.getFields} />\n          </div>\n        )\n    \n    }\n \n}\n\nexport default Myform"]},"metadata":{},"sourceType":"module"}