{"ast":null,"code":"import _defineProperty from \"/home/grace/test/redux/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH, DELETE, CREATE, SEARCH, RESET, SAVE } from '../ActionTypes/tablelist';\nimport { action } from 'mobx';\nexport const createFetchAction = () => {\n  return {\n    type: FETCH,\n    payload: action.payload\n  };\n};\nexport const createDeleteAction = data => {\n  for (let k in data) {\n    data[k].key = data[k].createdAt;\n  }\n\n  return {\n    type: DELETE,\n    payload: data\n  };\n};\nexport const CreateAddaction = data => {\n  return {\n    type: CREATE,\n    payload: data\n  };\n};\nexport const CreateSearchaction = (value, data) => {\n  let arr3 = [];\n\n  for (let i in data) {\n    if (data[i].name.search(value) >= 0) {\n      arr3.push({\n        key: data[i].createdAt,\n        createdAt: data[i].createdAt,\n        desc: data[i].desc,\n        name: data[i].name,\n        source: data[i].source,\n        url: data[i].url\n      });\n    }\n  }\n\n  return {\n    type: SEARCH,\n    payload: arr3\n  };\n};\nexport const CreateResetAction = () => {\n  return {\n    type: RESET\n  };\n};\nexport const CreateSaveAction = (form, key, newData) => {\n  form.validateFields((error, row) => {\n    if (error) {\n      return;\n    }\n\n    const index = newData.findIndex(item => key === item.key);\n\n    if (index > -1) {\n      const item = newData[index];\n      newData.splice(index, 1, _objectSpread({}, item, {}, row));\n    } else {\n      newData.push(row);\n    }\n  });\n  return {\n    type: SAVE,\n    payload: newData\n  };\n};","map":{"version":3,"sources":["/home/grace/test/redux/src/Actions/tablelist.js"],"names":["FETCH","DELETE","CREATE","SEARCH","RESET","SAVE","action","createFetchAction","type","payload","createDeleteAction","data","k","key","createdAt","CreateAddaction","CreateSearchaction","value","arr3","i","name","search","push","desc","source","url","CreateResetAction","CreateSaveAction","form","newData","validateFields","error","row","index","findIndex","item","splice"],"mappings":";;;;;;AAAA,SAAQA,KAAR,EAAcC,MAAd,EAAqBC,MAArB,EAA4BC,MAA5B,EAAmCC,KAAnC,EAA0CC,IAA1C,QAAqD,0BAArD;AACA,SAASC,MAAT,QAAuB,MAAvB;AAGA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AAEnC,SAAO;AACHC,IAAAA,IAAI,EAAGR,KADJ;AAEHS,IAAAA,OAAO,EAAEH,MAAM,CAACG;AAFb,GAAP;AAIH,CANM;AAQP,OAAO,MAAMC,kBAAkB,GAAGC,IAAI,IAAI;AACpC,OAAK,IAAIC,CAAT,IAAcD,IAAd,EAAmB;AACjBA,IAAAA,IAAI,CAACC,CAAD,CAAJ,CAAQC,GAAR,GAAcF,IAAI,CAACC,CAAD,CAAJ,CAAQE,SAAtB;AACD;;AACH,SAAM;AACFN,IAAAA,IAAI,EAAEP,MADJ;AAEFQ,IAAAA,OAAO,EAAGE;AAFR,GAAN;AAIH,CARM;AAUP,OAAO,MAAMI,eAAe,GAAGJ,IAAI,IAAI;AACrC,SAAO;AACFH,IAAAA,IAAI,EAAEN,MADJ;AAEFO,IAAAA,OAAO,EAAEE;AAFP,GAAP;AAID,CALM;AAOP,OAAO,MAAMK,kBAAkB,GAAG,CAACC,KAAD,EAAON,IAAP,KAAgB;AAE1C,MAAIO,IAAI,GAAG,EAAX;;AACA,OAAI,IAAIC,CAAR,IAAaR,IAAb,EAAkB;AAElB,QAAGA,IAAI,CAACQ,CAAD,CAAJ,CAAQC,IAAR,CAAaC,MAAb,CAAoBJ,KAApB,KAA8B,CAAjC,EAAmC;AAC/BC,MAAAA,IAAI,CAACI,IAAL,CAAU;AACVT,QAAAA,GAAG,EAAEF,IAAI,CAACQ,CAAD,CAAJ,CAAQL,SADH;AAEVA,QAAAA,SAAS,EAAEH,IAAI,CAACQ,CAAD,CAAJ,CAAQL,SAFT;AAGVS,QAAAA,IAAI,EAAEZ,IAAI,CAACQ,CAAD,CAAJ,CAAQI,IAHJ;AAIVH,QAAAA,IAAI,EAAET,IAAI,CAACQ,CAAD,CAAJ,CAAQC,IAJJ;AAKVI,QAAAA,MAAM,EAAEb,IAAI,CAACQ,CAAD,CAAJ,CAAQK,MALN;AAMVC,QAAAA,GAAG,EAAEd,IAAI,CAACQ,CAAD,CAAJ,CAAQM;AANH,OAAV;AAQH;AACF;;AAEL,SAAO;AACLjB,IAAAA,IAAI,EAACL,MADA;AAELM,IAAAA,OAAO,EAACS;AAFH,GAAP;AAID,CArBM;AAuBP,OAAO,MAAMQ,iBAAiB,GAAG,MAAM;AACjC,SAAO;AACLlB,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGL,CAJM;AAMP,OAAO,MAAMuB,gBAAgB,GAAG,CAACC,IAAD,EAAMf,GAAN,EAAUgB,OAAV,KAAsB;AAChDD,EAAAA,IAAI,CAACE,cAAL,CAAoB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAClC,QAAID,KAAJ,EAAW;AACT;AACD;;AACD,UAAME,KAAK,GAAGJ,OAAO,CAACK,SAAR,CAAkBC,IAAI,IAAItB,GAAG,KAAKsB,IAAI,CAACtB,GAAvC,CAAd;;AACA,QAAIoB,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,YAAME,IAAI,GAAGN,OAAO,CAACI,KAAD,CAApB;AACAJ,MAAAA,OAAO,CAACO,MAAR,CAAeH,KAAf,EAAsB,CAAtB,oBACKE,IADL,MAEKH,GAFL;AAID,KAND,MAMO;AACLH,MAAAA,OAAO,CAACP,IAAR,CAAaU,GAAb;AACD;AACF,GAdD;AAeA,SAAO;AACLxB,IAAAA,IAAI,EAAEH,IADD;AAELI,IAAAA,OAAO,EAAEoB;AAFJ,GAAP;AAKL,CArBM","sourcesContent":["import {FETCH,DELETE,CREATE,SEARCH,RESET, SAVE} from '../ActionTypes/tablelist';\nimport { action } from 'mobx';\n\n\nexport const createFetchAction = () => {\n\n    return {\n        type : FETCH,\n        payload: action.payload\n    }\n}\n\nexport const createDeleteAction = data => {\n      for (let k in data){\n        data[k].key = data[k].createdAt\n      }\n    return{\n        type: DELETE,\n        payload : data\n    }\n}\n\nexport const CreateAddaction = data => {\n  return {\n       type: CREATE,\n       payload: data\n  }\n}\n\nexport const CreateSearchaction = (value,data) => {\n\n        let arr3 = []\n        for(let i in data){\n\n        if(data[i].name.search(value) >= 0){\n            arr3.push({\n            key: data[i].createdAt,\n            createdAt: data[i].createdAt,\n            desc: data[i].desc,\n            name: data[i].name,\n            source: data[i].source,\n            url: data[i].url,\n            });\n        }\n      }\n\n  return {\n    type:SEARCH,\n    payload:arr3\n  }\n}\n\nexport const CreateResetAction = () => {\n      return {\n        type: RESET,\n      }\n}\n\nexport const CreateSaveAction = (form,key,newData) => {\n      form.validateFields((error, row) => {\n        if (error) {\n          return;\n        }\n        const index = newData.findIndex(item => key === item.key);\n        if (index > -1) {\n          const item = newData[index];\n          newData.splice(index, 1, {\n            ...item,\n            ...row,\n          });\n        } else {\n          newData.push(row);\n        }\n      });\n      return {\n        type: SAVE,\n        payload: newData\n      }\n\n}"]},"metadata":{},"sourceType":"module"}